buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/itest-postfunction1/postfunction.gradle'

def functionKey = 'com.innovalog.jmwe.jira-misc-workflow-extensions:setsecurityfromrole'

def SECURITY_LEVEL1_ID = getSecurityLevelId("Level1", TestProject)
def SECURITY_LEVEL2_ID = getSecurityLevelId("Level2", TestProject)

def securityLevel1Id = {->SECURITY_LEVEL1_ID.getAt(0).trim()}
def securityLevel2Id = {->SECURITY_LEVEL2_ID.getAt(0).trim()}

def projectRole = [
        admin : [ "selectedProjectRoleId=$jiraAdminRoleId" ],
        testRole : ["selectedProjectRoleId=$testProjectRoleId"]
]

['setLevel1IfAdminRole'].each {
    def fields =  [projectRole.admin, "selectedSecurityLevelId=$securityLevel1Id", conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', fields, functionKey)
    }
}

['setLevel2IfTestRole'].each {
    def fields =  [projectRole.testRole, "selectedSecurityLevelId=$securityLevel2Id" , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', fields, functionKey)
    }
}

['setLevel1IfAdminRoleWhenConditionTrue'].each {
    def fields =  [projectRole.admin, "selectedSecurityLevelId=$securityLevel1Id", conditionalExecution.true]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', fields, functionKey)
    }
}

createWorkflowScheme()
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')
def defaultIssue1 = createIssue([type: 'Task', summary: 'JMWE_Issue', priority: 'High'], 'defaultIssue1')

[
        'setLevel1IfAdminRoleWhenConditionTrue'
].each {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: " :  labels " + it,
                 parameters: [
                         transition: it,
                         issue     : { -> defaultIssue[] },
                 ],
                ],
                [action    : 'getFieldValue', ext: ": Chack field value should be added to parent issue" + it,
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Security Level",
                 ],
                 failData  : ["Security Level  . . . . . . . : Level1"],
                ]
        ])
    }
}

[
        'setLevel2IfTestRole'
].each {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: " : Security Level " + it,
                 parameters: [
                         transition: it,
                         issue     : { -> defaultIssue[] },
                 ],
                ],
                [action    : 'getFieldValue', ext: ": Security Level :" + it,
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Security Level",
                 ],
                 failData  : ["Security Level  . . . . . . . : Level2"],
                ]
        ])
    }
}
[
        'setLevel1IfAdminRole'
].each {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: " :  " + it,
                 parameters: [
                         transition: it,
                         issue     : { -> defaultIssue[] },
                 ],
                ],
                [action    : 'getFieldValue', ext: ": " + it,
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Security Level",
                 ],
                 data      : ["Security Level  . . . . . . . : Level1"]
                ]
        ])
    }
}

[
        'setLevel1IfAdminRoleWhenConditionTrue'
].each {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: " :  when condition true ",
                 parameters: [
                         transition: it,
                         issue     : { -> defaultIssue1[] },
                 ],
                ],
                [action    : 'getFieldValue', ext: ": when condition is true",
                 parameters: [
                         issue: { -> defaultIssue1[] },
                         field: "Security Level",
                 ],
                 data      : ["Security Level  . . . . . . . : Level1"]
                ]
        ])
    }
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}

apply plugin: 'org.gint.atlassian'
//apply from: gint.resourceDirectory +'/src/common/utils.gradle'
apply from: gint.resourceDirectory +'/src/itest-postfunction1/postfunction1.gradle'

def functionKey = 'com.innovalog.jmwe.jira-misc-workflow-extensions:return-to-previous-status-function'

def useTransition = [
        yes : [ "useTransition=yes" ],
        no : [ "useTransition=no" ]
]

[
        'returnToPrevStatus'
].each {
    def fields = defaultFieldsServer + conditionalExecution.false + useTransition.no + runAsUser.currentUser
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', fields, functionKey)
        moveTransitionFunction(it, 4)
    }
}

[
        'returnToPrevStatus_ifConditionTrue'
].each {
    def fields = defaultFieldsServer + conditionalExecution.true + useTransition.no + runAsUser.currentUser
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', fields, functionKey)
        moveTransitionFunction(it, 4)
    }
}

createWorkflowScheme()
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')
def previousStatus = "In Progress"

if(!isCloud) {
    gint.taskHelper.add([
            [action    : 'transitionIssue', ext: " :  set previous status of issue to $previousStatus ",
             parameters: [
                     transition: previousStatus,
                     issue     : { -> defaultIssue[] },
             ],
            ],
            [action    : 'transitionIssue', ext: " : set status of issue to To Do again : ",
             parameters: [
                     transition: "To Do",
                     issue     : { -> defaultIssue[] },
             ],
            ],
    ])
}

['returnToPrevStatus',].each {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: " :  return to previous status " + it,
                 parameters: [
                         transition: it,
                         issue     : { -> defaultIssue[] },
                 ],
                ],
                [action    : 'getFieldValue', ext: ": Check issue should :  $it",
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Status",
                 ],
                 data      : [
                         "Status  . . . . . . . . . . . : $previousStatus",
                 ]
                ],
                [action    : 'transitionIssue', ext: " : set issue status to To Do again : " + it,
                 parameters: [
                         transition: "To Do",
                         issue     : { -> defaultIssue[] },
                 ],
                ],
        ])
    }
}


['returnToPrevStatus_ifConditionTrue',].each {
    if(!isCloud) {
        gint.taskHelper.add([
                [action     : 'transitionIssue', ext: " :  when condition false ",
                 sleepaAfter: 2000,
                 parameters : [
                         transition: it,
                         issue     : { -> defaultIssue[] },
                 ],
                ],
                [action    : 'getFieldValue', ext: ": issue should not return to previous status when condition false",
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Status",
                 ],
                 failData  : ["Status  . . . . . . . . . . . : $previousStatus"]
                ],
                [action    : 'updateIssue', ext: " : add description to add in comment : " + it,
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         priority: 'High'
                 ]
                ],
                [action    : 'transitionIssue', ext: " :  return to previous status " + it,
                 parameters: [
                         transition: it,
                         issue     : { -> defaultIssue[] },
                 ],
                ],

                [action    : 'getFieldValue', ext: ": issue return to previous status when condition true",
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Status",
                 ],
                 data      : ["Status  . . . . . . . . . . . : $previousStatus"]
                ],
                [action    : 'transitionIssue', ext: " : set issue status to To Do again : " + it,
                 parameters: [
                         transition: "To Do",
                         issue     : { -> defaultIssue[] },
                 ],
                ],
        ])
    }
}


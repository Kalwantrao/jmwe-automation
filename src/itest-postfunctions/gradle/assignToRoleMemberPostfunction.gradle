import groovy.json.JsonSlurper
import java.nio.file.Paths

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}
apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/common/testPostfunctions.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def user = info?.isCloud ? info?.userDisplayName : info?.user
def userId = info?.isCloud ? cloudUser : serverUser
def jsonSlurper = new JsonSlurper();
def path = Paths.get(gint.directories.resource + "/resources/postfunctionsData/AssignToRoleMemberPostFunctions${info?.isCloud ? "Cloud" : ""}.json")
def transitionFunctions = jsonSlurper.parse(path)
def transition = 'assignToRoleMember'
def functionKey = info?.isCloud ? assignToRoleMemberCloud : assignToRoleMemberServer
def startStep = info?.isCloud ? startStepCloud : startStepServer

createTransitionsWithFunctions(transitionFunctions, transition, functionKey, 'postfunction', startStep, workflow, screen, 0)

// issue creation
def simpleIssue = createIssue(projectName,{[ type: 'Task', summary: 'JMWE_Issue']}, 'simpleIssue')
transitionIssue(transition+0, {-> simpleIssue[0]}, 0, 'Verify the project Role dropdown', null, null)
getIssueInformation({-> simpleIssue[0]}, /Assignee  . . . . . . . . . . : ${info?.isCloud ? info?.userDisplayName : info?.user} (${info?.userKey})/, 'TC_09_Case_1_Verify the projectName Role dropdown- Assign issue to jira_administrators')

def currentIssue = createIssue(projectName,{[ type: 'Task', summary: 'JMWE_Issue']}, 'currentIssue')
getIssueInformation({-> currentIssue[0]}, /Assignee  . . . . . . . . . . : /, 'TC_09_Case_2_Verify the project Role dropdown')

// currentUser.getUserProperty("Age")
// currentUser.getEntityProperty("Age")




buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}

apply plugin: "org.gint.atlassian"
apply from: gint.resourceDirectory +'/src/common/utils.gradle'

tearDown()
addWorkflow()
def defaultFields = [
        "selectedLinkType=$relatedIssue.currentIssue",
        "useGroovyCondition=false",
        "groovyExpression=",
        "runAsUser=",
        "correlationId="
]
fields.eachWithIndex { field, index ->
        gint.taskHelper.addSetUp([
                [action    : 'addTransition', ext: index,
                 parameters: [
                         workflow: workflow,
                         name    : field,
                         step    : info?.isCloud ? startStepCloud : startStepServer,
                         screen  : screen
                 ]
                ],
                [action    : 'addTransitionFunction', ext: index,
                 parameters: [
                         workflow   : workflow,
                         transition : field,
                         functionKey: clearFieldsServer ,
                         type       : 'postfunction',
                         step       : info?.isCloud ? startStepCloud : startStepServer,
                         field      : defaultFields + "fields=$field"
                 ]
                ]
        ])
}
/*
relatedIssue.eachWithIndex { key, value, i ->
    gint.taskHelper.addSetUp([
            [action    : 'addTransition', ext: key,
             parameters: [
                     workflow: workflow,
                     name    : key,
                     step    : info?.isCloud ? startStepCloud : startStepServer,
                     screen  : screen
             ]
            ],
            [action    : 'addTransitionFunction', ext: key,
             parameters: [
                     workflow   : workflow,
                     transition : key,
                     functionKey: clearFieldsServer ,
                     type       : 'postfunction',
                     step       : info?.isCloud ? startStepCloud : startStepServer,
                     field      : ["fields=labels", "selectedLinkType=$value", "useGroovyCondition=false", "groovyExpression=", "runAsUser=", "correlationId=",]
             ]
            ]
    ])
}


 */

createWorkflowScheme()
createProject()
createVersions(1) // will add version = 1
createComponents(1) // will add component = 'component1'

def Task = createIssue([type: 'Task', summary: 'JMWE_Issue', labels: 'test_clearLabels', components: 'component1', assignee: user], 'check clear fields pf')


/*
relatedIssue.eachWithIndex { key, value, i ->
    gint.taskHelper.add(
            [action    : 'transitionIssue', ext: key,
             parameters: [
                     issue     : { -> parentIssue[] },
                     transition: key,
                    ]
            ],
    )
}
gint.taskHelper.add( [
        [action: 'getIssue',
            ext: 'check fields',
            parameters: [
                issue: { -> parentIssue[] }
                ],
            failData: [
                'Labels  . . . . . . . . . . . : test_clearLabels',
                 ],
        ]
])
*/

fields.eachWithIndex { field, index ->
    gint.taskHelper.add(
            action: 'transitionIssue', ext: field,
            parameters: [
                    issue     : { -> Task[] },
                    transition: field,
            ],
    )
}

ext.clearFields = {
    gint.taskHelper.add(
            [action    : 'getIssue',
             ext       : 'check fields',
             parameters: [
                     issue: { -> Task[] }
             ],
             failData  : [
                     'Labels  . . . . . . . . . . . : test_clearLabels',
                     'Components  . . . . . . . . . : component1',
                     'Affects versions  . . . . . . : 1',
                     'Fix versions  . . . . . . . . : 1',
                     "Assignee  . . . . . . . . . . : ${info?.isCloud ? info?.userDisplayName : info?.user} (${info?.userKey})",
             ],
            ],
    )
}
ext.setFields = {
    gint.taskHelper.add(
            [action    : 'getIssue',
             ext       : 'check fields',
             parameters: [
                     issue: { -> Task[] }
             ],
             data  : [
                     'Labels  . . . . . . . . . . . : test_clearLabels',
                     'Components  . . . . . . . . . : component1',
                     'Affects versions  . . . . . . : 1',
                     'Fix versions  . . . . . . . . : 1',
                     "Assignee  . . . . . . . . . . : ${info?.isCloud ? info?.userDisplayName : info?.user} (${info?.userKey})",
             ],
            ],
    )
}




// field      : info?.isCloud ? ["postFunction.id=5d3d4063-fbbd-4929-bab6-34dbe9897ff4","postFunction.config-5d3d4063-fbbd-4929-bab6-34dbe9897ff4={""conditionalExecution=false"",""fields=$field"",""runAsType=addonUser""}"] : ["fields=$field", "selectedLinkType=$relatedIssue.currentIssue", "useGroovyCondition=false", "groovyExpression=", "runAsUser=", "correlationId="]


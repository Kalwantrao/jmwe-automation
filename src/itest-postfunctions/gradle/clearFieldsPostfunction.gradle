import groovy.json.JsonSlurper
import java.nio.file.Paths

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
    project.ext.seleniumVersion = findProperty('seleniumVersion') ?: System.getenv('SELENIUM_VERSION') ?: '3.14.+'
    dependencies { // needed here for selenium testing :(
        ['java', 'support', 'firefox-driver', 'chrome-driver', 'safari-driver', 'edge-driver'].each { entry ->
            classpath 'org.seleniumhq.selenium:selenium-' + entry + ':' + seleniumVersion
        }
    }

}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/common/utils.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def user = info.user
def userId = info?.isCloud ? cloudUser : serverUser
def jsonSlurper = new JsonSlurper();
def path = Paths.get(gint.directories.resource + "/resources/postfunctionsData/ClearFieldsPostfunction${info?.isCloud ? "Cloud" : ""}.json")
def transitionFunctions = jsonSlurper.parse(path)
def transition = 'clearFieldsPf'

tearDown()
addWorkflow()
addWorkflowExtension( transitionFunctions, transition, info?.isCloud ? clearFieldsCloud : clearFieldsServer, 'postfunction', 0)
createWorkflowScheme()
createProject()
addUser()

def issue = createIssue([type: 'Bug', summary: "JMWE_Issue"],'Bug')
def toIssue = createIssue([type: 'Bug', summary: "JMWE_Issue"],' ')
linkIssue([issue: {-> issue[]}, toIssue: {-> toIssue[]}, link: 'blocks'], 'Blocks')

ext.TC_01 = { ext="Check labels should be clear" ->
    transitionIssue(transition +0, {-> issue[]}, 0, null, ext)
    getFieldValue({->issue[]}, "Labels", " ", ext)
}

TC_01()


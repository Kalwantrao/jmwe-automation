buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.gint:gint-atlassian:3.8.4"
	}
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/common/utils.gradle'

tearDown()
addWorkflow()

def functionKey = info?.isCloud? 'com.atlassian.plugins.atlassian-connect-plugin:com.innovalog.jmwe.jira-misc-workflow-extensions__UserCondition' : 'com.innovalog.jmwe.jira-misc-workflow-extensions:generic-user-condition'

def defaultFieldsCloud = [ "condition.id=85e260ad-0ccf-433d-bd76-2fcda1e4bb6d" ]


def currentUserConditionCriteria = info?.isCloud ? currentUserConditionCriteriaCloud : userCriteria
def userInFieldAssigneeUserConditionCriteria = info?.isCloud ? userInFieldAssigneeUserConditionCriteriaCloud : userCriteria
def userInFieldReporterUserConditionCriteria = info?.isCloud ? userInFieldReporterUserConditionCriteriaCloud : userCriteria
def userInFieldCreatorUserConditionCriteria = info?.isCloud ? userInFieldCreatorUserConditionCriteriaCloud : userCriteria

currentUserConditionCriteria.eachWithIndex { criteria, userFields, i ->
	def transition = "verify_current_user_should_be_" + criteria
	def cloud = defaultFieldsCloud + "condition.config-85e260ad-0ccf-433d-bd76-2fcda1e4bb6d=$userFields"
	def server = defaultFieldsServer + userFields +  whichUser.currentUser + reverse.no + userMode.allUsers + fieldEmpty.no
	addTransitionFunction(transition, 'condition', info?.isCloud ? cloud : server, functionKey )
}

userInFieldAssigneeUserConditionCriteria.eachWithIndex { criteria, userFields, i ->
	def transition = "verify_user_in_field_assignee_should_be_" + criteria
	def cloud = defaultFieldsCloud + "condition.config-85e260ad-0ccf-433d-bd76-2fcda1e4bb6d=$userFields"
	def server = defaultFieldsServer + userFields + whichUser.userInFieldAssignee + reverse.no + userMode.allUsers + fieldEmpty.no
	addTransitionFunction(transition, 'condition', info?.isCloud ? cloud : server,  functionKey )
}

userInFieldReporterUserConditionCriteria.eachWithIndex { criteria, userFields, i ->
	def transition = "verify_user_in_field_reporter_should_be_" + criteria
	def cloud = defaultFieldsCloud + "condition.config-85e260ad-0ccf-433d-bd76-2fcda1e4bb6d=$userFields"
	def server = defaultFieldsServer + whichUser.userInFieldReporter + userFields + reverse.no + userMode.allUsers + fieldEmpty.no
	addTransitionFunction(transition, 'condition', info?.isCloud ? cloud : server, functionKey )
}

userInFieldCreatorUserConditionCriteria.eachWithIndex { criteria, userFields, i ->
	def transition = "verify_user_in_field_creator_should_be_" + criteria
	def cloud = defaultFieldsCloud + "condition.config-85e260ad-0ccf-433d-bd76-2fcda1e4bb6d=$userFields"
	def server = defaultFieldsServer + whichUser.userInFieldCreator + userFields + reverse.no + userMode.allUsers + fieldEmpty.no
	addTransitionFunction(transition, 'condition', info?.isCloud ? cloud : server, functionKey )
}

['verify_current_user_should_be_in_assignee_reporter_labels'].each {
	def server =  defaultFieldsServer + whichUser.currentUser + userCriteria.assignee + userCriteria.reporter + userCriteria.inFieldLabels + reverse.no + userMode.allUsers + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['verify_user_in_field_assignee_should_be_in_reporter_labels'].each {
	def server =  defaultFieldsServer + whichUser.userInFieldAssignee + userCriteria.reporter + userCriteria.inFieldLabels + reverse.no + userMode.allUsers + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['verify_user_in_field_reporter_should_be_in_assignee_labels'].each {
	def server =  defaultFieldsServer + whichUser.userInFieldReporter + userCriteria.assignee + userCriteria.inFieldLabels + reverse.no + userMode.allUsers + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['verify_user_in_field_creator_should_be_in_reporter_assignee_labels'].each {
	def server =  defaultFieldsServer + whichUser.userInFieldCreator + userCriteria.reporter + userCriteria.assignee + userCriteria.inFieldLabels + reverse.no + userMode.allUsers + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['verify_current_user_should_be_in_at_least_one_field_assignee_reporter_labels'].each {
	def server =  defaultFieldsServer + whichUser.currentUser + userCriteria.assignee + userCriteria.reporter + userCriteria.inFieldLabels + reverse.no + userMode.atLeastOne + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['verify_user_in_field_assignee_should_be_in_at_least_one_field_reporter_labels'].each {
	def server =  defaultFieldsServer + whichUser.userInFieldAssignee + userCriteria.inFieldLabels + userCriteria.reporter + reverse.no + userMode.atLeastOne + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['verify_user_in_field_reporter_should_be_in_at_least_one_field_assignee_labels'].each {
	def server =  defaultFieldsServer + whichUser.userInFieldReporter + userCriteria.inFieldLabels + userCriteria.assignee + reverse.no + userMode.atLeastOne + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['verify_user_in_field_creator_should_be_in_at_least_one_field_reporter_assignee_labels'].each {
	def server =  defaultFieldsServer + whichUser.userInFieldCreator + userCriteria.inFieldLabels + userCriteria.reporter + userCriteria.assignee + reverse.no + userMode.atLeastOne + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['currentUser_should_not_be_in_fields_assignee_reporter_field_reverse'].each {
	def server =  defaultFieldsServer + whichUser.currentUser + userCriteria.assignee + userCriteria.reporter + userCriteria.inFieldLabels + reverse.yes + userMode.atLeastOne + fieldEmpty.no
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

['user_in_field_assignee_should_be_in_field_labels_or_field_empty'].each {
	def server =  defaultFieldsServer + whichUser.userInFieldAssignee + userCriteria.inFieldLabels + reverse.no + userMode.atLeastOne + fieldEmpty.yes
	if(!isCloud) {
		addTransitionFunction(it, 'condition', server, functionKey)
	}
}

createWorkflowScheme()
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')

// USER_CONDITION_TS_26_TC_01_Verify the current user should be reporter
[
		'verify_current_user_should_be_reporter', //returnFromScript
].each {
	gint.taskHelper.add([
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_26_TC_01_Case_01_ $it _when  satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ":Change the reporter of issue before checking_ $it _satisfy the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 reporter: testUser,
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_26_TC_01_Case_02_ $it _when  not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ":Change the reporter of issue after checking_ $it _satisfy the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 reporter: user,
			 ],
			],
	])
}

// USER_CONDITION_TS_26_TC_02_Verify the should be assignee
[
		'verify_current_user_should_be_assignee',
].each {
	gint.taskHelper.add([
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_26_TC_02_Case_01_ $it _when  satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ":Change the assignee of issue before checking_ $it _satisfy the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 assignee: user,
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_26_TC_02_Case_02_ $it _when  not satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ":Change the assignee of issue after checking_ $it _satisfy the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 assignee: " ",
			 ],
			],
	])
}

// USER_CONDITION_TS_26_TC_03_Verify the current user should be in field labels
[
		'verify_current_user_should_be_inFieldLabels',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_26_TC_03_Case_01_ $it _when  satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'updateIssue',
				 ext       : ":Change the labels of issue before checking_ $it _satisfy the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue : { -> defaultIssue[] },
						 labels: user,
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_26_TC_03_Case_02_ $it _when  not satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":remove the labels of issue after checking_ $it _satisfy the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_26_TC_04_Verify the current user should be return from script
[
		'verify_current_user_should_be_returnFromScript',
].each {
	gint.taskHelper.add([
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_26_TC_04_Case_01_ $it _when  satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ":Change the reporter of issue before checking_ $it _satisfy the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 reporter: testUser,
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_26_TC_04_Case_02_ $it _when  not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ":Change the reporter of issue after checking_ $it _satisfy the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 reporter: user,
			 ],
			],
	])
}

// USER_CONDITION_TS_26_TC_05_Verify the current user should be project lead
[
		'verify_current_user_should_be_projectLead',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'updateProject',
				 ext       : ":change the project lead to $testUser _to check_ $it: ",
				 expected  : 0,
				 sleep: 5000,
				 parameters: [
						 project: projectName,
						 lead   : testUser,
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_26_TC_05_Case_01_ $it _when  not satisfies the criteria: ",
				 expected  : -1,
				 sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'updateProject',
				 ext       : ":change the project lead to $user _to check_ $it: ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 project: projectName,
						 lead   : user,
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_26_TC_05_Case_02_ $it _when  satisfies the criteria: ",
				 expected  : 0,
				 sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_01_Verify the user in field assignee should be reporter
[
		'verify_user_in_field_assignee_should_be_reporter',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ":asign to $testUser _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Assignee",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_01_Case_01_ $it _when  not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ":asign to $user _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Assignee",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_01_Case_02_ $it _when  not satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_02_Verify the user in field assignee should be in field labels
[
		'verify_user_in_field_assignee_should_be_inFieldLabels',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":of assignee value to $user _to check $it : ",
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_02_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_02_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_03_Verify the user in field assignee should be return from script
[
		'verify_user_in_field_assignee_should_be_returnFromScript',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ":reporter value set to $testUser _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_03_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ":reporter value set to $user _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_03_Case_02_ $it _when satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_04_Verify the user in field assignee should be projectLead
[
		'verify_user_in_field_assignee_should_be_projectLead',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'updateProject',
				 ext       : ":project lead value set to $testUser _to check $it : ",
				 expected  : 0,
				 sleep: 5000,
				 parameters: [
						 project: projectName,
						 lead   : testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_04_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'updateProject',
				 ext       : ":project lead value set to $user _to check $it : ",
				 expected  : 0,
				 sleep: 5000,
				 parameters: [
						 project: projectName,
						 lead   : user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_04_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_05_Verify the user in field assignee should be of admin role
[
		'verify_user_in_field_assignee_should_be_inAdminRole',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ": assignee to $testUser _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 field: "Assignee",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_05_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ": to set assignee to $user _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 assignee: user,
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_05_Case_02_ $it _when satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_06_Verify the user in field assignee should be in admin group
[
		'verify_user_in_field_assignee_should_be_inAdminGroup',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ": of assignee to $testUser _to check $it : ",
				 expected  : 0,
				 sleep     : 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_06_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 sleep     : 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'updateIssue',
				 ext       : ": to set assignee to $user _to check $it : ",
				 expected  : 0,
				 sleep     : 5000,
				 parameters: [
						 issue   : { -> defaultIssue[] },
						 assignee: user,
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_06_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 sleep     : 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_07_Verify the user in field assignee should specific user_checkUser
[
		'verify_user_in_field_assignee_should_be_checkUser',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ": of assignee to $testUser _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 field: "Assignee",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_07_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ": to set assignee to $user _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 assignee: user,
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_07_Case_02_ $it _when satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_08_Verify the user in field reporter should be
[
		'verify_user_in_field_reporter_should_be_assignee',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ":asign to $testUser _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Assignee",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_08_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'updateIssue',
			 ext: ":to ser assignee to $user _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 assignee: user,
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_08_Case_02_ $it _when  not satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_09_Verify the user in field assignee should be in field labels
[
		'verify_user_in_field_reporter_should_be_inFieldLabels',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":of reporter to $user _to check $it : ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":of labels to empty _to check $it : ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_09_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
			     sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $user _to check $it : ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_09_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_10_Verify the user in field reporter should be return from script
[
		'verify_user_in_field_reporter_should_be_returnFromScript',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ":reporter value set to $testUser _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_10_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ":reporter value set to $user _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_10_Case_02_ $it _when satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_11_Verify the user in field reporter should be projectLead
[
		'verify_user_in_field_reporter_should_be_projectLead',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'updateProject',
				 ext       : ":project lead value set to $testUser _to check $it : ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 project: projectName,
						 lead   : testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_11_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
			     sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'updateProject',
				 ext       : ":project lead value set to $user _to check $it : ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 project: projectName,
						 lead   : user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_11_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_12_Verify the user in field reporter should be of admin role
[
		'verify_user_in_field_reporter_should_be_inAdminRole',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ": reporter to $testUser _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 field: "Reporter",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_12_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ": reporter to $user _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 field: "Reporter",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_12_Case_02_ $it _when satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_13_Verify the user in field reporter should be in admin group
[
		'verify_user_in_field_reporter_should_be_inAdminGroup',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ": of reporter to $testUser _to check $it : ",
				 expected  : 0,
				 sleep     : 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_13_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 sleep     : 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ": of reporter to $user _to check $it : ",
				 expected  : 0,
				 sleep     : 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_13_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 sleep     : 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_14_Verify the user in field reporter should be specific user_checkUser
[
		'verify_user_in_field_reporter_should_be_checkUser',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ": of reporter to $testUser _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 field: "Reporter",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_14_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ": of reporter to $user _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : { ->defaultIssue[] },
					 field: "Reporter",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_14_Case_02_ $it _when satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_15_Verify the user in field creator should be reporter
[
		'verify_user_in_field_creator_should_be_reporter',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ":reporter to $testUser _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_15_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ":reporter to $user _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_15_Case_02_ $it _when  not satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_16_Verify the user in field creator should be assignee
[
		'verify_user_in_field_creator_should_be_assignee',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ":assign to $testUser _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Assignee",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_08_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ":asign to $user _ $it _to check criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Assignee",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_08_Case_02_ $it _when  not satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_17_Verify the user in field creator should be in field labels
[
		'verify_user_in_field_creator_should_be_inFieldLabels',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":of labels to empty _to check $it : ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_17_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
			     sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $user _to check $it : ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_17_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
			     sleep: 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_18_Verify the user in field creator should be return from script
[
		'verify_user_in_field_creator_should_be_returnFromScript',
].each {
	gint.taskHelper.add([
			[action    : 'setFieldValue',
			 ext: ":reporter value set to $testUser _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: testUser
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_18_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : -1,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
			[action    : 'setFieldValue',
			 ext: ":reporter value set to $user _to check $it : ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 field: "Reporter",
					 value: user
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_18_Case_02_ $it _when satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_19_Verify the user in field creator should be projectLead
[
		'verify_user_in_field_creator_should_be_projectLead',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'updateProject',
				 ext       : ":project lead value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 project: projectName,
						 lead   : testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_19_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'updateProject',
				 ext       : ":project lead value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 project: projectName,
						 lead   : user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_19_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_20_Verify the user in field creator should be of admin role
[
		'verify_user_in_field_creator_should_be_inAdminRole',
].each {
	gint.taskHelper.add([
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_20_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}

// USER_CONDITION_TS_40_TC_21_Verify the user in field creator should be in admin group
[
		'verify_user_in_field_creator_should_be_inAdminGroup',
].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_40_TC_21_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : 0,
				 sleep     : 5000,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_40_TC_22_Verify the user in field creator should specific user_checkUser
[
		'verify_user_in_field_creator_should_be_checkUser',
].each {
	gint.taskHelper.add([
			[action    : 'transitionIssue',
			 ext: ":USER_CONDITION_TS_40_TC_22_Case_01_ $it _when not satisfies the criteria: ",
			 expected  : 0,
			 sleep: 5000,
			 parameters: [
					 issue     : {->defaultIssue[]},
					 transition: it,
			 ],
			],
	])
}


// USER_CONDITION_TS_49_TC_01_Verify the mode: all the criteria configured below_current user
['verify_current_user_should_be_in_assignee_reporter_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_01_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_01_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_49_TC_02_Verify the mode: all the criteria configured below_user in field assignee
['verify_user_in_field_assignee_should_be_in_reporter_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_02_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_02_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_49_TC_03_Verify the mode: all the criteria configured below_user in field reporter
['verify_user_in_field_reporter_should_be_in_assignee_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $user _after check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _after check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_03_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_03_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_49_TC_04_Verify the mode: all the criteria configured below_user in field creator
['verify_user_in_field_creator_should_be_in_reporter_assignee_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_04_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_49_TC_04_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_50_TC_01_Verify the mode: at least one of the criteria configured below_ current user
['verify_current_user_should_be_in_at_least_one_field_assignee_reporter_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_01_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_01_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_50_TC_02_Verify the mode: at least one of the criteria configured below_ user in field assignee
['verify_user_in_field_assignee_should_be_in_at_least_one_field_reporter_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_02_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_02_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_50_TC_03_Verify the mode: at least one of the criteria configured below_ user in field reporter
['verify_user_in_field_reporter_should_be_in_at_least_one_field_assignee_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_03_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_03_Case_04_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_50_TC_04_Verify the mode: at least one of the criteria configured below_ user in field creator
['verify_user_in_field_creator_should_be_in_at_least_one_field_reporter_assignee_labels'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_04_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_50_TC_04_Case_02_ $it _when satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_22_TC_04_Verify for the Reverse condition checkbox under the current user Condition configuration page
['currentUser_should_not_be_in_fields_assignee_reporter_field_reverse'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $testUser _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: testUser
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_22_TC_01_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":assignee value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":reporter value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Reporter",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels value set to $user _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: user
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_22_TC_01_Case_02_ $it _when satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}

// USER_CONDITION_TS_51_TC_01_Verify the mode: at least one of the criteria configured below with or the field can be empty oprion.
['user_in_field_assignee_should_be_in_field_labels_or_field_empty'].each {
	if(!isCloud) {
		gint.taskHelper.add([
				[action    : 'setFieldValue',
				 ext       : ":assignee set to $testUser _to check $it : ",
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: user
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":labels set to $testUser _to check $it : ",
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Labels",
						 value: testUser
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_51_TC_01_Case_01_ $it _when not satisfies the criteria: ",
				 expected  : -1,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
				[action    : 'setFieldValue',
				 ext       : ":Assignee value set to empty _to check $it : ",
				 expected  : 0,
				 parameters: [
						 issue: { -> defaultIssue[] },
						 field: "Assignee",
						 value: " "
				 ],
				],
				[action    : 'transitionIssue',
				 ext       : ":USER_CONDITION_TS_51_TC_01_Case_02_ $it _when satisfies the criteria_field is empty: ",
				 expected  : 0,
				 parameters: [
						 issue     : { -> defaultIssue[] },
						 transition: it,
				 ],
				],
		])
	}
}



/*
1. The current user should match all the following criteria:
The user is the reporter : positive - current user is reporter
 negative - other user is reporter = "DONE"

2.The current user should match at least one of the following criteria:
The user is the assignee
The user is one of the following users: jmwe-qa
 positive: check when assignee is current user / current user is jmwe_qa
 negative: when assignee is not current user  /  current user is not jmwe_qa = "DONE"

3. The current user should match all the following criteria:
The user is one of the watchers
 positive: 1.add multiple watchers 2.add multiple watchers with current user 3. check login by other watchers
 negative: 1.current user not visible when not selected as watcher
4. configure with all options under criteria and check -positives and negatives
5. Active and inactive users
 */




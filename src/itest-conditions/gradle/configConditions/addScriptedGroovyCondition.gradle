apply plugin: 'org.gint.atlassian'
apply from: gint.directories.resource + '/common/utils.gradle'

def info =	gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def project = gint.getJiraHelper().getProjectKey()	//get project key using jira helper functions
def workflow =	project	//Name of the workflow will be same as project name
def workflowScheme = project	//Name of the workflow scheme will be same as project name
def startStep =	info ?.isCloud ? '1' : '11' // depends on workflow. '11' (To Do) works for custom jira workflow
def functionKey = 'com.innovalog.jmwe.jira-misc-workflow-extensions:groovy-condition'	//function key for current status condition
def type = 'condition'
def transition = 'scriptedGroovyCondition'
def user = info.user


(1..14).each { number ->
    gint.taskHelper.addSetUp(
        action: 'addTransition', ext: number,
        end: true,
        parameters: [
            workflow: workflow,
            name: transition + number,
            description: 'Transition for scriptedGroovyCondition' + number,
            step: startStep,
        ],
        data: [
            "Transition '${transition + number}' added to workflow '${workflow}' with id ",
        ],
    )
}

(1..14).each { number ->
def scriptedGroovyCondition
    if (number == 1)
    	scriptedGroovyCondition = "{\"groovyExpression\":\"issue.getAsString('assignee')=='${user}'\",\"scriptDescription\":\"Following groovy condition must return true\",\"correlationId\":\"\"}"
     else if (number == 2)
        scriptedGroovyCondition = "{\"groovyExpression\":\"issue.getAsString('assignee')=='${user}'\",\"scriptDescription\":\"\",\"correlationId\":\"\"}"
     else if (number == 3)
        scriptedGroovyCondition = "{\"groovyExpression\":\"!!issue.get('description')\",\"scriptDescription\":\"\",\"correlationId\":\"\"}"
     else if (number == 4)
        scriptedGroovyCondition = "{\"groovyExpression\":\"1==1\",\"correlationId\":\"\"}"
     else if (number == 5)
        scriptedGroovyCondition = "{\"groovyExpression\":\"26515\",\"correlationId\":\"\"}"
     else if (number == 6)
        scriptedGroovyCondition = "{\"groovyExpression\":\"'26515'\",\"correlationId\":\"\"}"
     else if (number == 7)
        scriptedGroovyCondition = "{\"groovyExpression\":\"'abc'\",\"correlationId\":\"\"}"
     else if (number == 8)
        scriptedGroovyCondition = "{\"groovyExpression\":\"abc\",\"correlationId\":\"\"}"
     else if (number == 9)
        scriptedGroovyCondition = "{\"groovyExpression\":\"!issue.get('assignee') || issue.get('versions')?.any{it.name == '1'} || issue.get('assignee')?.name == 'jdoe' || issue.get('assignee')?.name == ${user}\",\"correlationId\":\"\"}"
     else if (number == 10)
        scriptedGroovyCondition = "{\"groovyExpression\":\"!issue.get('assignee') && issue.get('versions')?.any{it.name == '1'} && issue.get('assignee')?.name == 'jdoe' && issue.get('assignee')?.name == ${user}\",\"correlationId\":\"\"}"
     else if (number == 11)
        scriptedGroovyCondition = "{\"groovyExpression\":\"'#'\",\"scriptDescription\":\"\",\"correlationId\":\"\"}"
     else if (number == 12)
        scriptedGroovyCondition = "{\"groovyExpression\":\"\",\"correlationId\":\"\"}"
     else if (number == 13)
        scriptedGroovyCondition = "{\"groovyExpression\":\"\",\"scriptDescription\":\"Following groovy condition must return true\",\"correlationId\":\"\"}"
     else if (number == 14)
        scriptedGroovyCondition = "{\"groovyExpression\":\"\",\"scriptDescription\":\"\",\"correlationId\":\"\"}"

gint.taskHelper.addSetUp(
	action: 'addTransitionFunction', ext: number,
        dependsOn: true,
        end: true, // one at a time
        parameters: [
            workflow: workflow,
            transition: transition + number,
            functionKey: functionKey,
            type: type,
            step: startStep,
            data: scriptedGroovyCondition,
        ],
        data: [
            "Transition function of type ${type} added to workflow '${workflow}'.",
        ],
    )
}

apply plugin: 'org.gint.atlassian'
apply from: 'common/utils.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def project = gint.getJiraHelper().getProjectKey()	//get project key using jira helper functions
def baseWorkflow = 'JIRA'
def workflow = project
def workflowScheme = project
def startStep = info ?.isCloud ?  '1'  : '11' // depends on workflow. '1' for cloud and '11' (To Do)for server works for custom jira workflow
def functionKey = info ?.isCloud ? 'com.atlassian.plugins.atlassian-connect-plugin:com.innovalog.mwec__LinkedIssuesCondition' : 'com.innovalog.jmwe.jira-misc-workflow-extensions:linked-issues-condition'	//function key for RelatedIssue condition
def transition = 'relatedIssuesCondition'
def type = 'condition'
def saved =	[:]

gint.xmlReport = true	//xml report generates in projects root directory
gint.verbose =	true

(1..13).each { number ->
    gint.taskHelper.addSetUp(
        action: 'addTransition', ext: number,
        end: true,
        parameters: [
            workflow: workflow,
            name: transition + number,
            description: 'Transition for relatedIssuesCondition' + number,
            step: startStep,
        ],
        data: [
            "Transition '${transition + number}' added to workflow '${workflow}' with id ",
        ],
    )
}
(1..13).each { number ->
def relatedIssuesCondition
    if (number == 1)
    	relatedIssuesCondition =  info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : '{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"outward:10100\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}'
     else if (number == 2)
        relatedIssuesCondition =  info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : '{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"inward:10100\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}'
     else if (number == 3)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : '{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"outward:10200\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}'
     else if (number == 4)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : '{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"inward:10200\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}'
     else if (number == 5)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : '{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"*:*\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}'
     else if (number == 6)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : '{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"outward:10000\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}'
     else if (number == 7)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : "{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"groovy:issue.getLinkedIssues()\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}"
     else if (number == 8)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : "{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"jql:project='FAIL'\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}"
//-----------------------------------------//---------------------------------//------------------------------------------//---------------------------------//------------------------------------------//------------------------------------------//----------------------------------//---------------------------------------//----------------------------------------//-------------------------------------//
     else if (number == 9)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : "{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"\",\"minLinkedIssues\":\"\",\"selectedLinkType\":\"\",\"checkAllLinkedIssues\":\"\",\"correlationId\":\"\"}"
     else if (number == 10)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : "{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"1\",\"selectedLinkType\":\"jql\",\"checkAllLinkedIssues\":\"\",\"correlationId\":\"\"}"
     else if (number == 11)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : "{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"\",\"selectedLinkType\":\"groovy\",\"checkAllLinkedIssues\":\"\",\"correlationId\":\"\"}"
     else if (number == 12)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : "{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"\",\"conditionMode\":\"\",\"minLinkedIssues\":\"\",\"selectedLinkType\":\"\",\"checkAllLinkedIssues\":\"yes\",\"correlationId\":\"\"}"
     else if (number == 13)
        relatedIssuesCondition = info ?.isCloud ? '{\"statusIds\":\"10011\",\"options\":{\"not\":false},\"expression\":\"config.statusIds.includes(issue.status.id)\"}' : "{\"maxLinkedIssues\":\"\",\"groovyExpression\":\"'abc'\",\"conditionMode\":\"requireLinks\",\"minLinkedIssues\":\"\",\"selectedLinkType\":\"\",\"checkAllLinkedIssues\":\"no\",\"correlationId\":\"\"}"

gint.taskHelper.addSetUp(
	action: 'addTransitionFunction', ext: 'ForrelatedIssuesCondition'+number,
        dependsOn: true,
        end: true, // one at a time
        parameters: [
            workflow: workflow,
            transition: transition + number,
            functionKey: functionKey,
            type: type,
            step: startStep,
            data: relatedIssuesCondition,
        ],
        data: [
            "Transition function of type ${type} added to workflow '${workflow}'.",
        ],
    )
}
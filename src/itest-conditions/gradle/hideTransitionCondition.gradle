import groovy.json.JsonSlurper
import java.nio.file.Paths

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}
apply plugin: 'org.gint.atlassian'
//apply from: 'common/setUp.gradle'
apply from: gint.resourceDirectory +'/src/common/testConditions.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def project = 'AUTOMATION'//gint.getJiraHelper().getProjectKey()	//get project key using jira helper functions
def workflow = project
def screen = project

gint.xmlReport =	true	//xml report generates in projects root directory
gint.verbose =	true
def userId = 'jmwe_qa'
def jsonSlurper = new JsonSlurper();
def path = Paths.get(gint.directories.resource + "/resources/conditionsData/HideTransitionConditionFunctions${info?.isCloud ? "Cloud" : ""}.json")
def transitionFunctions = jsonSlurper.parse(path)
def functionKey = 'com.innovalog.jmwe.jira-misc-workflow-extensions:non-interactive-condition'	//function key for Hide transition condition
def transition = 'hideTransitionFromUser'
def startStep = info?.isCloud ? '1':'11' // depends on workflow. '1' for cloud and '11' (To Do)for server works for custom jira workflow

createTransitionsWithFunctions(transitionFunctions, transition, functionKey, 'condition', startStep, workflow, screen, 0)

// TC_01-check when current status of the issue is selected
def currentIssue = createIssue(project,{[ type: 'Bug', summary: 'JMWE_Issue']}, 'createCurrentIssue')
transitionIssue(transition+0, {-> currentIssue[0]}, -1, 'TC_01-check hide this transition from user', null, null)



buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.gint:gint-atlassian:3.8.4"
	}
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/itest-conditions/condition.gradle'

def functionKey = info?.isCloud ? "com.atlassian.plugins.atlassian-connect-plugin:com.innovalog.${testCloudBuild}__ScriptedCondition" : 'com.innovalog.jmwe.jira-misc-workflow-extensions:groovy-condition'

def cloudFields = "{\"expression\":\"!! issue.assignee\"}"

['issueMustBeAssignedToSpecificUser'].each {
	def fields = info?.isCloud ? cloudFields : ["scriptDescription=", /groovyExpression=issue.getAsString('assignee') == "$testUser"/]
	addTransitionFunction(it, 'condition', fields, functionKey )
}

createWorkflowScheme()
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')

// SCRIPTED_GROOVY_CONDITION_TC_24_Case_01-Verify for the Groovy script_when returns false on issue
[
		'issueMustBeAssignedToSpecificUser',
].each {
	gint.taskHelper.add([
			[action    : 'transitionIssue',
			 ext: ":SCRIPTED_GROOVY_CONDITION_TC_24_Case_01-Verify for the Groovy script_when returns false on issue",
			expected  : -1,
			parameters: [
					transition: it,
					issue: { -> defaultIssue[] },
				],
			],
	])
}

//SCRIPTED_GROOVY_CONDITION_TC_24_Case_02-Verify for the Groovy script_when returns true on issue
[
		'issueMustBeAssignedToSpecificUser',
].each {
	gint.taskHelper.add([
			[action    : 'updateIssue',
			 ext: ": assign issue to $testUser : ",
			 sleepAfter: 2000,
			 parameters: [
					 assignee: testUser,
					 issue: { -> defaultIssue[] },
			 ],
			],
			[action    : 'transitionIssue',
			 ext: ":SCRIPTED_GROOVY_CONDITION_TC_24_Case_02-Verify for the Groovy script_when returns true on issue",
			 sleep: 2000,
			 expected  : 0,
			 parameters: [
					 transition: it,
					 issue: { -> defaultIssue[] },
			 ],
			],
	])
}








buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.gint:gint-atlassian:3.8.4"
	}
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/common/utils.gradle'

tearDown()
addWorkflow()
def defaultsFields = [
		"scriptDescription=",
		"correlationId=",
]
def cloudFields = [
		"condition.id=e96e5f36-5d19-4cd7-b8d7-f13bfb41877d",
        "condition.config-e96e5f36-5d19-4cd7-b8d7-f13bfb41877d={\"expression\":\"!! issue.assignee\"}"
]
def functionKey = info?.isCloud ? functionKey.scriptedGroovyConditionCloud : functionKey.scriptedGroovyConditionServer

// Configuration for conditions
['issueMustHaveAssignee'].each {
	def fields = info?.isCloud ? cloudFields : defaultsFields + "groovyExpression=!!issue.get('assignee')"
	addTransitionFunction(it, 'condition', fields, functionKey )
}

createWorkflowScheme()
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')

// checking the current status To Do and previous status In Progress
[
		'issueMustHaveAssignee',
].each {
	gint.taskHelper.add([
			[action    : 'transitionIssue', ext: ' : when condition false ' + it,
			expected  : -1,
			parameters: [
					transition: it,
					issue: { -> defaultIssue[] },
				],
			],
			[action    : 'updateIssue', ext: ' : to check next condition ' + it,
			 sleepAfter: 2000,
			 parameters: [
					 assignee: user,
					 issue: { -> defaultIssue[] },
			 ],
			],
			[action    : 'transitionIssue', ext: ' : when condition true ' + it,
			 sleep: 2000,
			 expected  : 0,
			 parameters: [
					 transition: it,
					 issue: { -> defaultIssue[] },
			 ],
			],
	])
}









import groovy.json.JsonSlurper
import java.nio.file.Paths

buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.gint:gint-atlassian:3.8.4"
	}
}
apply plugin: 'org.gint.atlassian'
//apply from: 'common/setUp.gradle'
apply from: gint.resourceDirectory +'/src/common/testConditions.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def project = 'AUTOMATION'//gint.getJiraHelper().getProjectKey()	//get project key using jira helper functions
def workflow = project
def screen = project

gint.xmlReport =	true	//xml report generates in projects root directory
gint.verbose =	true
def userId = 'jmwe_qa'
def jsonSlurper = new JsonSlurper();
def path = Paths.get(gint.directories.resource + "/resources/conditionsData/CurrentStatusConditionFunctions${info?.isCloud ? "Cloud" : ""}.json")
def transitionFunctions = jsonSlurper.parse(path)
def transition = 'currentStatusCondition'
def functionKey = info?.isCloud ? 'com.atlassian.plugins.atlassian-connect-plugin:com.innovalog.mwec__CurrentStatusCondition' : 'com.innovalog.jmwe.jira-misc-workflow-extensions:currentstatus-condition'	//function key for HideTransitionCondition
def startStep = info?.isCloud ? '1':'11' // depends on workflow. '1' for cloud and '11' (To Do)for server works for custom jira workflow

createTransitionsWithFunctions(transitionFunctions, transition, functionKey, 'condition', startStep, workflow, screen, 0)

// TC_01-check issues current status should be in selected and is in selected
def currentIssue = createIssue(project,{[ type: 'Bug', summary: 'JMWE_Issue']}, 'createCurrentIssue')
transitionIssue(transition+0, {-> currentIssue[0]}, 0, 'TC_01-check issues current status should be in selected and is in selected', null, null)

// TC_02-check issues current status should not be in selected status but in selected status
def parent = createIssue(project,{[ type: 'Task', summary: 'JMWE_Issue']}, 'createParentIssue')
transitionIssue(transition+1, {-> parent[0]}, -1, 'TC_02-check issues current status should not be in selected status but in selected status', null, null)


/*
1. select all status checkbox
2. multiple conditions with To Do and In Progress
3. Add extension multiple times and check first should apply first FIFO
4. check the behaviour on custom statuses
5. check adding multiple custom statuses
6. check behaviour on all issuetypes
7. check status should not be visible when status itself is selected as current status -> transition: Done ,Current status: In Progress , issueTransition:Done
8. transition: Done , Current status : Done
9. transition: Done, current status: To Do, again add condition on transition: Done, current Status :Done
10. Check behaviour by adding postfunctions on same status also check fields
*/




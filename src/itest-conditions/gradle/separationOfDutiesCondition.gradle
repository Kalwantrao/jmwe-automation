buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/itest-conditions/condition.gradle'

def functionKey =  'com.innovalog.jmwe.jira-misc-workflow-extensions:separationofduties-condition'

def separationOfDutiesConditionOptions = [
        FROM_ANY_TO_TODO_STATUS : [  "fromStatus=" , "toStatus=To Do" ],
        FROM_INPROGRESS_TO_DONE_STATUS : [  "fromStatus=In Progress", "toStatus=Done"  ],
        FROM_DONE_TO_INPROGRESS_STATUS : [  "fromStatus=Done", "toStatus=In Progress" ],
]

separationOfDutiesConditionOptions.eachWithIndex { transitions, fields, i ->
    if(!isCloud){
        addTransitionFunction(transitions, 'condition', fields, functionKey )
    }
}


def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')


// SEPARATION_OF_DUTIES_CONDITION_TC_10_Case_01-Verify when issue never transitioned FROM status to TO status
separationOfDutiesConditionOptions.eachWithIndex { transition, fields, i->
    if(!isCloud) {
        gint.taskHelper.add([
                action    : 'transitionIssue',
                ext       : ": SEPARATION_OF_DUTIES_CONDITION_TC_10_Case_01_ $i _Verify when issue never transitioned_ $transition: ",
                expected  : 0,
                parameters: [
                        transition: transition,
                        issue     : { -> defaultIssue[] },
                ],
        ])
    }
}

// transition issue to check when the issues are transitioned FROM STATUS to TO STATUS
if(!isCloud) {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ' : To_ In Progress',
             parameters: [
                     transition: 'In Progress',
                     issue     : { -> defaultIssue[] },
             ],
            ],
            [action    : 'transitionIssue',
             ext: ' : To_ Done',
             parameters: [
                     transition: 'Done',
                     issue     : { -> defaultIssue[] },
             ],
            ],
            [action    : 'transitionIssue',
             ext: ' : again_ In Progress',
             parameters: [
                     transition: 'In Progress',
                     issue     : { -> defaultIssue[] },
             ],
            ],
            [action    : 'transitionIssue',
             ext: ' : To_ To Do',
             parameters: [
                     transition: 'To Do',
                     issue     : { -> defaultIssue[] },
             ],
            ],
    ])
}

//SEPARATION_OF_DUTIES_CONDITION_TC_10_Case_02-Verify when issue transitioned FROM status to TO status
separationOfDutiesConditionOptions.eachWithIndex { transition, fields, i->
    if(!isCloud) {
        gint.taskHelper.add([
                action    : 'transitionIssue',
                ext       : ": SEPARATION_OF_DUTIES_CONDITION_TC_10_Case_02_ $i _Verify when issue transitioned_ $transition : ",
                expected  : -1,
                parameters: [
                        transition: transition,
                        issue     : { -> defaultIssue[] },
                ],
        ])
    }
}

def transitionByUserTaskForSuccess =  { transition, userId, issue, expected ->
    if(!isCloud) {
        gint.taskHelper.add(
                [expected    : expected,
                 name        : ":check transition trigger by other user_ when issue transition by current user only:" + transition ,
                 cmd         : /acli $userId -a transitionIssue --issue $issue --transition $transition/,
                ]
        )
    }
}

// Check transition by other user_ when issue has transitioned FROM status to TO status by current user only
[
         'FROM_INPROGRESS_TO_DONE_STATUS',
         'FROM_DONE_TO_INPROGRESS_STATUS'
 ].each {
    transitionByUserTaskForSuccess(it, testUser, {->defaultIssue[]}, 0)
}

def transitionByUserTaskForError =  { transition, userId, issue, expected ->
    if(!isCloud) {
        gint.taskHelper.add(
                [expected    : expected,
                 name        : ":check transition trigger by other user_ when issue transition by test _ $testUser user:" + transition ,
                 cmd         : /acli $userId -a transitionIssue --issue $issue --transition "$transition"/,
                ]
        )
    }
}

transitionByUserTaskForError('In Progress', testUser, {->defaultIssue[]}, 0)
transitionByUserTaskForError('Done', testUser, {->defaultIssue[]}, 0)
transitionByUserTaskForError('To Do', testUser, {->defaultIssue[]}, 0)

// Check transition by other user_ when issue has transitioned FROM status to TO status by current user only
[
        'FROM_ANY_TO_TODO_STATUS',
        'FROM_INPROGRESS_TO_DONE_STATUS',
].each {
    transitionByUserTaskForError(it, testUser, {->defaultIssue[]}, -1)
}

/*
1. Add custom status to workflow and configure the condition For
    - From : customStatus
    - To : To DO , In Progress, In review, done = Pending
2. Add custom status to workflow and configure the condition For
    - From : To DO , In Progress, In review, done
    - To : customStatus = Pending
3. Add one more custom status and configure condition for
    - From : customStatus
    - To : customStatus = Pending
4. Check transition by logging into other users = Done
 */
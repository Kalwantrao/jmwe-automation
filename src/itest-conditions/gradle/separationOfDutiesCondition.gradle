
//To run  this using gradle open command line in project's root directory and run below command on windows
//gradlew -b src/itest-conditions/gradle/separationOfDutiesCondition.gradle -Pcli="acli jira" -Dclean

buildscript {
    def gintVersion = findProperty('gintVersion') ?: System.getenv('GINT_VERSION') ?: '+'
    dependencies {
        classpath 'org.gint:gint-atlassian:' + gintVersion
    }
    repositories {
        flatDir { dirs 'libs' }
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

apply plugin: 'org.gint.atlassian'
apply from: 'common/tearDown.gradle'
apply from: 'configConditions/addSeparationOfDutiesCondition.gradle'
apply from: 'common/setUp.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def project = gint.getJiraHelper().getProjectKey()	//get project key using jira helper functions
def user = info.user
def userqa1 = project.toLowerCase()+'qa1'
def userqa2 = project.toLowerCase()+'qa2'
def userdev1 = project.toLowerCase()+'dev1'
def userdev2 = project.toLowerCase()+'dev2'

def savedIssues = [:]
def saved =	[:]
def transition = 'separationOfDutiesCondition'

(1..3).each { number ->
def summary
	if (number == 1)
		summary = 'checkAnyToToDoStatus'
	else if(number == 2)
		summary = 'checkInProgressToDoneStatus'
	else if(number == 3)
		summary = 'checkDoneToInProgressStatus'

    gint.taskHelper.add(
        action: 'createIssue', ext: number,
        dependsOn: true,
        group: 'create',
        project: project,
        parameters: [
            type: 'Bug',
            summary: summary,
            assignee: user,
            description: 'description' + number,
        ],
        stopOnFail: true,
        finalClosure: { Task task ->
            saved.issue = gint.searchForIssueKey(task.outData)
            savedIssues[number] = saved.issue
            gint.helper.logVarWithFormat('saved')
        },
    )
}

(1..3).each { number ->
def fromStatus
	if(number == 1)
		fromStatus = "In Progress" //any status to To Do status
	else if(number == 2)
		fromStatus = "In Progress" //
	else if(number == 3)
		fromStatus = "Done"
def expected
	expected = [ 0 ]
def data
	if (number == 1)
		data = ~/Successfully transitioned issue ${project}-\d+ with transition 'In Progress'./
	if (number == 2)
		data = ~/Successfully transitioned issue ${project}-\d+ with transition 'In Progress'./
	if (number == 3)
		data = ~/Successfully transitioned issue ${project}-\d+ with transition 'Done'./
    gint.taskHelper.add('transitionIssueAll', [
        [action: 'transitionIssue', ext: 'fromStatus'+number,
            dependsOn: true,
            expected:expected,
            parameters: [
                issue: {-> savedIssues[number]  },
                transition: fromStatus,
            ],
            data:[ data ]
        ],
    ])
}
(1..3).each { number ->
def toStatus
	if(number == 1)
		toStatus = "To Do"
	else if(number == 2)
		toStatus = "Done"
	else if(number == 3)
		toStatus = "In Progress"
def data
	if (number == 1)
		data = ~/Successfully transitioned issue ${project}-\d+ with transition 'To Do'./
	if (number == 2)
		data = ~/Successfully transitioned issue ${project}-\d+ with transition 'Done'./
	if (number == 3)
		data = ~/Successfully transitioned issue ${project}-\d+ with transition 'In Progress'./
    gint.taskHelper.add('transitionIssueAll', [
        [action: 'transitionIssue', ext: 'toStatus'+number,
            dependsOn: true,
            parameters: [
                issue: {-> savedIssues[number]  },
                transition: toStatus,
            ],
            data:[ data ]
        ],
    ])
}
(1..3).each { number ->
def expected
	expected = [ -1 ]
def  data
	data = 	~/Client error: Workflow transition '${transition + number}' is not valid for issue ${project}-\d+./

    gint.taskHelper.add('transitionIssueAll', [
        [action: 'transitionIssue', ext: number,
            dependsOn: true,
            expected:expected,
            parameters: [
                issue: {-> savedIssues[number]  },
                transition: transition + number,
            ],
            data:[ data ]
        ],
    ])
}


//To run  this using gradle open command line in root directory and run below command on windows
//gradlew -b src/itest-conditions/gradle/relatedIssuesStatusCondition.gradle -Pcli="acli jira" -Dclean

buildscript {
    def gintVersion = findProperty('gintVersion') ?: System.getenv('GINT_VERSION') ?: '+'
    dependencies {
        classpath 'org.gint:gint-atlassian:' + gintVersion
    }
    repositories {
        flatDir { dirs 'libs' } // for testing SNAPSHOT versions
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

apply plugin: 'org.gint.atlassian'
apply from: 'common/tearDown.gradle'
apply from: 'configConditions/addRelatedIssuesCondition.gradle'
apply from: 'common/setUp.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def project = gint.getJiraHelper().getProjectKey()	//get project key using jira helper functions
def user = info.user
def userqa1 = project.toLowerCase()+'qa1'
def userqa2 = project.toLowerCase()+'qa2'
def userdev1 = project.toLowerCase()+'dev1'
def userdev2 = project.toLowerCase()+'dev2'

def saved =	[:]
def savedIssues = [:]
def transition = 'relatedIssuesCondition'

gint.xmlReport = true	//xml report generates in projects root directory
gint.verbose = true

// Create issues
(1..8).each { number ->
def type
	if(number == 1)
		type = 'Task'
	else if(number == 2)
		type = 'Task'
	else if(number == 3)
		type = 'Story'
	else if(number == 4)
		type = 'Story'
	else if(number == 5)
		type = 'Bug'
	else if(number == 6)
		type = 'Bug'
	else if(number == 7)
		type = 'Bug'
	else if(number == 8)
		type = 'Bug'

def summary
	if (number == 1)
		summary = 'requireSubtasksOfParentIssue'
	else if(number == 2)
		summary = 'requireParentIssueOfSubtask'
	else if(number == 3)
		summary = 'requireIssueBelongToEpic'
	else if(number == 4)
		summary = 'requireEpicOfCurrentIssue'
	else if(number == 5)
		summary = 'requireIssuesLinkedByAnyLinkType'
	else if(number == 6)
		summary = 'requireIssuesLinkedByFollowingLinkType'
	else if(number == 7)
		summary = 'requireIssuesReturnByGroovyCondition'
	else if(number == 8)
		summary = 'requireIssuesReturnByJqlSearch'

    gint.taskHelper.add(
        [action: 'createIssue', ext: number,
        dependsOn: true,
        group: 'create',
        project: project,
        parameters: [
        	type: type,
            summary: summary ,
            description: 'relatedIssuesCondition' + number,
        ],
        stopOnFail: true,
        finalClosure: { Task task ->
            saved.issue = gint.searchForIssueKey(task.outData)
            savedIssues[number] = saved.issue
            gint.helper.logVarWithFormat('Create Issues to validate the related issues condition')
        },
    ],
)
}

(1..8).each{ number ->
def data = ~/Client error: Workflow transition '${transition + number}' is not valid for issue ${project}-\d+./
def expected = [ -1 ]

    gint.taskHelper.add('transitionIssueAll', [
        [action: 'transitionIssue', ext: 'requireRelatedIssues'+number,
            dependsOn: true,
            expected: expected,
            parameters: [
                issue: {-> savedIssues[number]  },
                transition: transition + number,
				],
			data:[ data ],
            finalClosure:{ Task task ->
            	gint.helper.logVarWithFormat('Should not throw error as previous or Current Status should be To Do ')

            },

        ],
    ])
}
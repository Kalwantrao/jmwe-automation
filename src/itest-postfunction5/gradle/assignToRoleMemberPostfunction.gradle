buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.3"
    }
}
apply plugin: "org.gint.atlassian"
apply from: gint.resourceDirectory +'/src/itest-postfunction5/postfunction.gradle'

def functionKey = info?.isCloud ? "com.atlassian.plugins.atlassian-connect-plugin:com.innovalog.${testCloudBuild}__AssignToRoleMemberFunction" : 'com.innovalog.jmwe.jira-misc-workflow-extensions:assigntorolemember'

ext.EMPTY_PROJECT_ROLE_ID = getProjectRoleId("emptyprojectrole")
project.ext.emptyProjectRoleId = {->EMPTY_PROJECT_ROLE_ID.getAt(0).trim()}

def projectRole = [
        admin : ["jira.projectrole.id=$jiraAdminRoleId"],
        testRole : ["jira.projectrole.id=$testProjectRoleId"],
        emptyRole : ["jira.projectrole.id=$emptyProjectRoleId"],
]

def action = [
        force : ["assigneeMode=default"],
        ifAutomatic : ["assigneeMode=skipIfAssignee"],
        ifMemberRequiredRole : ["assigneeMode=useSelectedUser"],
        ifChangedOnTransitionScreen : ["assigneeMode=forceSelectedUser"],
]

['1. assignToAdminRole'].each {
    def server =  [projectRole.admin + conditionalExecution.false]
    def cloud =  "{\"conditionalExecution\":false,\"sendNotifications\":true,\"role\":$jiraAdminRoleId,\"runAsType\":\"addonUser\"}"
    addTransitionFunction( it, 'postfunction', info?.isCloud ? cloud : server, functionKey)
}
['2. assignToTestRole'].each {
    def server =  [projectRole.testRole + conditionalExecution.false]
    def cloud =  "{\"conditionalExecution\":false,\"sendNotifications\":true,\"role\":$testProjectRoleId,\"runAsType\":\"addonUser\"}"
    addTransitionFunction( it, 'postfunction', info?.isCloud ? cloud : server, functionKey)
}
['3. issueUnassigned'].each {
    def server =  [projectRole.emptyRole , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['4. ifAutomaticAction'].each {
    def server =  [projectRole.admin , action.ifAutomatic , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['5. ifAutomaticActionNegative'].each {
    def server =  [projectRole.admin , action.ifAutomatic , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['6. ifMemberRequiredRole'].each {
    def server =  [projectRole.admin , action.ifMemberRequiredRole , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['7. ifMemberNotRequiredRole'].each {
    def server =  [projectRole.admin , action.ifMemberRequiredRole , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['8. ifMemberRequiredRoleAutomatic'].each {
    def server =  [projectRole.admin , action.ifMemberRequiredRole , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['9. ifMemberRequiredRoleUnassigned'].each {
    def server =  [projectRole.admin , action.ifMemberRequiredRole , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['10. ifChangedOnTransitionScreenRoleMember'].each {
    def server =  [projectRole.admin , action.ifChangedOnTransitionScreen , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['11. ifChangedOnTransitionScreenNotRoleMember'].each {
    def server =  [projectRole.admin , action.ifChangedOnTransitionScreen , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['12. ifChangedOnTransitionScreenAutomatic'].each {
    def server =  [projectRole.admin , action.ifChangedOnTransitionScreen , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['13. ifChangedOnTransitionScreenUnassigned'].each {
    def server =  [projectRole.admin , action.ifChangedOnTransitionScreen , conditionalExecution.false]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}
['14. assignToAdminRoleOnlyIfConditionTrue'].each {
    def server =  [projectRole.admin , conditionalExecution.true]
    if(!isCloud) {
        addTransitionFunction(it, 'postfunction', server, functionKey)
    }
}

createWorkflowScheme();
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')
def usersToAddInProjectRoleServer = [testUser1,testUser,inactiveAdmin, testAdmin,"@self"]
def usersToAddInProjectRoleCloud = [testUser1,testUser, testAdmin,"@self"]
def usersToAddInProjectRole = info?.isCloud? usersToAddInProjectRoleCloud : usersToAddInProjectRoleServer

["Administrators",testRole].each { role ->
    usersToAddInProjectRole.eachWithIndex { user, idx ->
        gint.taskHelper.add(
                action: 'removeProjectRoleActors',
                sleep: sleep,
                ext: ": remove user_ $user from project role_ $role",
                parameters: [
                        project : projectName,
                        role    : role,
                        userId  : user,
                        continue: null
                ]
        )
    }
}

[testUser1,"@self"].collect{
    def role;
    if(it == "@self"){
        role = "Administrators"
    }
    else {
        role = testRole
    }
    gint.taskHelper.add(
            action: 'addProjectRoleActors',
            sleep: sleep,
            ext: ": add user $it to project role_ $role",
            parameters:[
                    project: projectName,
                    role: role,
                    userId: it,
                    continue: null
            ]
    )
}

// 1. Assign to default Admin role
[
        '1. assignToAdminRole'
].collect {
        gint.taskHelper.add([
                [action    : 'transitionIssue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                 ]
                ],
                [action    : 'getFieldValue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
        ])
}

// 2. Assign to Test role
[
        '2. assignToTestRole'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             sleep: sleep,
             ext: it + ': of related issue' ,
             parameters: [
                     issue     : { -> defaultIssue[] },
                     transition: it ,
             ]
            ],
            [action    : 'getFieldValue',
             sleep: sleep,
             ext       : it + ': of related issue' ,
             parameters: [
                     issue: { -> defaultIssue[] },
                     field: "Assignee"
             ],
             data      : [/Assignee  . . . . . . . . . . : $testUser1/],
            ],
            [action    : 'updateIssue',
             sleep: sleep,
             ext       : it + ': unassigned' ,
             parameters: [
                     issue: { -> defaultIssue[] },
                     assignee: " "
             ],
            ],
    ])
}
// 3. Keep issue unassigned when there is no user in the selected project role
[
        '3. issueUnassigned'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                 ]
                ],
                [action    : 'getFieldValue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : /],
                ],
        ])
    }
}
// 4. Assign to Admin role, if automatic selected in transition screen
[
        '4. ifAutomaticAction'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : -1, //pass -1 when we need automatic assignee in transition screen
                 ]
                ],
                [action    : 'getFieldValue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 sleep     : sleep,
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
// 5. Assign to selected user in transition screen even if automatic action
[
        '5. ifAutomaticActionNegative'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : testUser1,
                 ]
                ],
                [action    : 'getFieldValue',
                 sleep     : sleep,
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $testUser1/],
                ],
                [action    : 'updateIssue',
                 sleep     : sleep,
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
// 6. If member of the required role is selected on the transition screen, assign issue to them.
[
        '6. ifMemberRequiredRole'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : user,
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
// 7. If selected user on the transition screen is not a role member, assign issue to default role member.
[
        '7. ifMemberNotRequiredRole'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : testUser1,
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
// 8. If automatic assignee selected on the transition screen, assign issue to default role member.
[
        '8. ifMemberRequiredRoleAutomatic'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : -1, //pass -1 when we need automatic assignee in transition screen
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
// 9. If unassigned, assignee selected on the transition screen, assign issue to default role member.
[
        '9. ifMemberRequiredRoleUnassigned'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : " ",
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
// 10. Use the assignee selected on the transition screen if user is a role member.
[
        '10. ifChangedOnTransitionScreenRoleMember'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : user,
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
/*
// 11. Use the assignee selected on the transition screen if user is not a role member.
[
        '11. ifChangedOnTransitionScreenNotRoleMember'
].collect {
 if(!isCloud) {
    gint.taskHelper.add([
            [action    : 'transitionIssue', ext: it + ': of related issue' ,
             parameters: [
                     issue     : { -> defaultIssue[] },
                     transition: it ,
                     assignee: testUser1,
             ]
            ],
            [action    : 'getFieldValue',
             ext       : it + ': of related issue' ,
             parameters: [
                     issue: { -> defaultIssue[] },
                     field: "Assignee"
             ],
             data      : [/Assignee  . . . . . . . . . . : $testUser1/],
            ],
            [action    : 'updateIssue',
             ext       : it + ': unassigned' ,
             parameters: [
                     issue: { -> defaultIssue[] },
                     assignee: " "
             ],
            ],
    ])
    }
}
*/
// 12. If automatic assignee selected on the transition screen, assign issue to default role member.
[
        '12. ifChangedOnTransitionScreenAutomatic'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : -1, //pass -1 when we need automatic assignee in transition screen
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
// 13. If unassigned, assignee selected on the transition screen, assign issue to default role member.
[
        '13. ifChangedOnTransitionScreenUnassigned'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         assignee  : " ",
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 data      : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
                [action    : 'updateIssue',
                 ext       : it + ': unassigned',
                 parameters: [
                         issue   : { -> defaultIssue[] },
                         assignee: " "
                 ],
                ],
        ])
    }
}
[
        '14. assignToAdminRoleOnlyIfConditionTrue'
].collect {
    if(!isCloud) {
        gint.taskHelper.add([
                [action    : 'transitionIssue', ext: it + ': of related issue',
                 parameters: [
                         issue     : { -> defaultIssue[] },
                         transition: it,
                         priority  : 'Medium',
                 ]
                ],
                [action    : 'getFieldValue',
                 ext       : it + ': of related issue',
                 parameters: [
                         issue: { -> defaultIssue[] },
                         field: "Assignee"
                 ],
                 failData  : [/Assignee  . . . . . . . . . . : $getCurrentUserName/],
                ],
        ])
    }
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/common/utils.gradle'

tearDown()
addWorkflow()

def relatedIssue = info?.isCloud ? relatedIssueCloud : relatedIssueServer
relatedIssue.remove("currentIssue")
def functionKey = info?.isCloud? functionKey.relatedIssuesStatusvalidatorCloud : 'com.innovalog.jmwe.jira-misc-workflow-extensions:linkedissuesstatus-validator'
def errorMessage = "Check linked issues status"

def defaultFieldsCloud = ["validator.id=7e7f0c41-7aa4-4ff9-896c-ff1fe247a67f"]

def defaultFieldsServer = [ "errorMessage=$errorMessage", "correlationId=" ]

relatedIssue.eachWithIndex { linkedIssue, fieldValues, i ->
    def transition = "verify_status_in_progress_of_all_issues_which_are_" + linkedIssue
    def server = defaultFieldsServer + issueType.any + "selectedLinkType=$fieldValues" + linkedIssuesStatusMode.all + statuses.inProgress
    addTransitionFunction(transition, 'validator', server, functionKey)
}

relatedIssue.eachWithIndex { linkedIssue, fieldValues, i ->
    def transition = 'verify_status_in_progress_of_at_least_one_issues_which_is_' + linkedIssue
    def server = defaultFieldsServer + issueType.any + "selectedLinkType=$fieldValues" + linkedIssuesStatusMode.one + statuses.inProgress
    addTransitionFunction( transition, 'validator', server, functionKey)
}

relatedIssue.eachWithIndex { linkedIssue, fieldValues, i ->
    def transition = 'verify_status_in_progress_none_of_the_issues_which_are_' + linkedIssue
    def server = defaultFieldsServer + issueType.any + "selectedLinkType=$fieldValues" + linkedIssuesStatusMode.none + statuses.inProgress
    addTransitionFunction(transition, 'validator', server, functionKey)
}

relatedIssue.eachWithIndex { linkedIssue, fieldValues, i ->
    def transition = 'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_' + linkedIssue
    def server = defaultFieldsServer + issueType.any + "selectedLinkType=$fieldValues" + linkedIssuesStatusMode.oneNot + statuses.inProgress
    addTransitionFunction(transition, 'validator', server, functionKey)
}

['verify_the_issue_type_dropdwn_Task'].each {
    def server = defaultFieldsServer + issueType.task + "selectedLinkType=$relatedIssue.parentIssue" + linkedIssuesStatusMode.all + statuses.inProgress
    addTransitionFunction(it, 'validator', server, functionKey)
}

['verify_the_issue_type_dropdwn_Story'].each {
    def server = defaultFieldsServer + issueType.story + "selectedLinkType=$relatedIssue.parentIssue" + linkedIssuesStatusMode.all + statuses.inProgress
    addTransitionFunction(it, 'validator', server, functionKey)
}

['verify_the_condition_groovy_expression'].each {
    def server = defaultFieldsServer + issueType.any + "selectedLinkType=$relatedIssue.subtask" + conditionalValidation.yes + linkedIssuesStatusMode.all + statuses.inProgress
    addTransitionFunction(it, 'validator', server, functionKey)
}

createWorkflowScheme()
createProject()

def parent = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'parent')
def subtask = createIssue([type: 'Sub-task', summary: 'JMWE_Issue', parent: { -> parent[] }], 'Sub-task')
def epic = createIssue([type: 'Epic', summary: 'JMWE_Issue', field: "Epic Name", value: "JMWE_Issue"], 'Epic')
def issueBelongsToEpic = createIssue([type: 'Task', summary: 'JMWE_Issue', field: "Epic Link", value: {->epic[]}], 'BelongsToEpic')
def initiative = createIssue([type: 'Initiative', summary: 'JMWE_Issue'], 'Initiative')
def epic_initiative = createIssue([type: 'Epic', summary: 'JMWE_Issue', field: "Epic Name", value: "JMWE_Issue"], 'Epic_initiative')
def issueLinks = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'issueLinks')
def blocks = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'blocks')
def clones = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'clones')
def duplicates = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'duplicates')
def relatesTo = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'relatesTo')
def jqlIssue = createIssue([type: 'Task', summary: 'JQL_ISSUE'], 'jqlIssue')

updateIssue([issue: {->epic_initiative[]}, field: "Parent Link", value: {->initiative[]}], "parent initiative child epic")

def linkIssuesMap = [
        blocks : {->blocks[]},
        clones : {->clones[]},
        duplicates : {->duplicates[]},
        'relates to': {->relatesTo[]}
]
linkIssuesMap.eachWithIndex { key, value, i ->
    linkIssue([issue: {->issueLinks[]}, toIssue: value, link: "$key"], key)
}


// RELATED_ISSUES_STATUS_VALIDATOR_TC_10-Verify Sub_task of the current issue
[
        'verify_status_in_progress_of_all_issues_which_are_subtask'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_10_Case_01- $it _when Sub_task of the current issue not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS to verify_ $it _when Sub_task of the current issue in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_10_Case_02- $it _when Sub_task of the current issue not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after verifying_ $it _when Sub_task of the current issue in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_11-Verify Parent issue of the current sub-task
[
        'verify_status_in_progress_of_all_issues_which_are_parentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_11_Case_01- $it _when parent issue of the current subtask not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when parent issue of the current subtask in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_11_Case_02- $it _when parent issue of the current subtask in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when parent issue of the current subtask in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: "To Do",
             ]
            ],
    ])
}
// RELATED_ISSUES_STATUS_VALIDATOR_TC_12-Verify Issues that belong to the current Epic
[
        'verify_status_in_progress_of_all_issues_which_are_issueBelongsToEpic'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_12_Case_01- $it _when Issues that belong to the current Epic _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues that belong to the current Epic _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_12_Case_02- $it _when Issues that belong to the current Epic _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues that belong to the current Epic _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_13-Verify Epic of the current issue
[
        'verify_status_in_progress_of_all_issues_which_are_epicOfTheCurrentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_13_Case_01- $it _when Epic of the current issue _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Epic of the current issue _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_13_Case_02- $it _when Epic of the current issue _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Epic of the current issue _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_14-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByAnyLink'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_14_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_14_Case_02- $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_01-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByBlock'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_01_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_01_Case_02- $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_02-Verify Issue link to the current issue through is blocked by link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByisBlockedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_02_Case_01- $it _when Issue link to the current issue throgh is blocked by link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_02_Case_02- $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_03-Verify Issue link to the current issue through clones link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByClones'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_03_Case_01- $it _when Issue link to the current issue throgh clones link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_03_Case_02- $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_04-Verify Issue link to the current issue through by is cloned by link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByIsClonedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_04_Case_01- $it _when Issue link to the current issue throgh is cloned by link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_04_Case_02- $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_05-Verify Issue link to the current issue through by duplicates link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByDuplicates'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_05_Case_01- $it _when Issue link to the current issue throgh duplicates link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_05_Case_02- $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_06-Verify Issue link to the current issue through by is duplicated by link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByIsDuplicatedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_06_Case_01- $it _when Issue link to the current issue through is duplicated by link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_06_Case_02- $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_07-Verify Issue link to the current issue through by relates to link type
[
        'verify_status_in_progress_of_all_issues_which_are_linkByRelatesTo'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_07_Case_01- $it _when Issue link to the current issue through is relates to link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_15_TC_07_Case_02- $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_16-Verify Child issues of the current issue in the Portfolio hierarchy
[
        'verify_status_in_progress_of_all_issues_which_are_childPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_16_Case_01- $it _when Child issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_16_Case_02- $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Child issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_17-Verify Parent issues of the current issue in the Portfolio hierarchy
[
        'verify_status_in_progress_of_all_issues_which_are_parentPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_17_Case_01- $it _when Parent issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Parent issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_17_Case_02- $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_18-Verify Issues returned by a Groovy script
[
        'verify_status_in_progress_of_all_issues_which_are_returnsByGroovyExpression'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_18_Case_01- $it _when Issues returned by a Groovy script _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a Groovy script _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_18_Case_02- $it _when Issues returned by a Groovy script_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a Groovy script_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_19-Verify Issues returned by a JQL search
[
        'verify_status_in_progress_of_all_issues_which_are_returnsFromJqlSearch'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_23_Case_01- $it _when Issues returned by a JQL search _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a JQL search _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TC_23_Case_02- $it _when Issues returned by a JQL search_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a JQL search_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_01-Verify Sub_task of the current issue
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_subtask'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_01_Case_01- $it _when Sub_task of the current issue not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS to verify_ $it _when Sub_task of the current issue in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_01_Case_02- $it _when Sub_task of the current issue not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after verifying_ $it _when Sub_task of the current issue in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_02-Verify Sub_task of the current issue
// Invalid use case as child issue has only one parent issue - can't check invalid configuration
[
        //'verify_status_in_progress_of_at_least_one_issues_which_is_parentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_02_Case_01- $it _when parent issue of the current subtask not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when parent issue of the current subtask in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_02_Case_02- $it _when parent issue of the current subtask in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when parent issue of the current subtask in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: "To Do",
             ]
            ],
    ])
}
// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_03-Verify Issues that belong to the current Epic
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_issueBelongsToEpic'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_03_Case_01- $it _when Issues that belong to the current Epic _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues that belong to the current Epic _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_03_Case_02- $it _when Issues that belong to the current Epic _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues that belong to the current Epic _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_04-Verify Epic of the current issue
// Invalid use case as child issue has only one parent issue - can't check invalid configuration
[
        //'verify_status_in_progress_of_at_least_one_issues_which_is_epicOfTheCurrentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_04_Case_01- $it _when Epic of the current issue _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Epic of the current issue _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_04_Case_02- $it _when Epic of the current issue _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Epic of the current issue _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_05-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByAnyLink'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_04_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_05_Case_02- $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06A-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByBlock'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06A_TC_01_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06A_TC_01_Case_02- $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06B-Verify Issue link to the current issue through is blocked by link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByisBlockedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06B_Case_01- $it _when Issue link to the current issue throgh is blocked by link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06B_Case_02- $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06C-Verify Issue link to the current issue through clones link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByClones'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06C_Case_01- $it _when Issue link to the current issue throgh clones link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06C_Case_02- $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06D-Verify Issue link to the current issue through by is cloned by link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByIsClonedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06D_Case_01- $it _when Issue link to the current issue throgh is cloned by link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06D_Case_02- $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06E-Verify Issue link to the current issue through by duplicates link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByDuplicates'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06E_Case_01- $it _when Issue link to the current issue throgh duplicates link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06E_Case_02- $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06F-Verify Issue link to the current issue through by is duplicated by link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByIsDuplicatedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06F_Case_01- $it _when Issue link to the current issue through is duplicated by link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06F_Case_02- $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06G-Verify Issue link to the current issue through by relates to link type
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_linkByRelatesTo'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06G_Case_01- $it _when Issue link to the current issue through is relates to link type _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_06G_Case_02- $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_07-Verify Child issues of the current issue in the Portfolio hierarchy
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_childPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_07_Case_01- $it _when Child issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_07_Case_02- $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Child issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_08-Verify Parent issues of the current issue in the Portfolio hierarchy
// Invalid use case as child issue has only one parent issue - can't check invalid configuration
[
        // 'verify_status_in_progress_of_at_least_one_issues_which_is_parentPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_08_Case_01- $it _when Parent issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Parent issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_08_Case_02- $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_09-Verify Issues returned by a Groovy script
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_returnsByGroovyExpression'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_09_Case_01- $it _when Issues returned by a Groovy script _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a Groovy script _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_09_Case_02- $it _when Issues returned by a Groovy script_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a Groovy script_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_10-Verify Issues returned by a JQL search
[
        'verify_status_in_progress_of_at_least_one_issues_which_is_returnsFromJqlSearch'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_10_Case_01- $it _when Issues returned by a JQL search _not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a JQL search _in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_10_Case_02- $it _when Issues returned by a JQL search_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a JQL search_in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_01-Verify Sub_task of the current issue
[
        'verify_status_in_progress_none_of_the_issues_which_are_subtask'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_01_Case_01- $it _when Sub_task of the current issue not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS to verify_ $it _when Sub_task of the current issue in selected status:",
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_26_TC_01_Case_02- $it _when Sub_task of the current issue not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after verifying_ $it _when Sub_task of the current issue in selected status:",
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_02-Verify parent issue of the current subtask
[
        'verify_status_in_progress_none_of_the_issues_which_are_parentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_02_Case_01- $it _when parent issue of the current subtask not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when parent issue of the current subtask in selected status:",
             parameters: [
                     issue     : { ->parent[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_02_Case_02- $it _when parent issue of the current subtask in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when parent issue of the current subtask in selected status:",
             parameters: [
                     issue     : { ->parent[] },
                     transition: "To Do",
             ]
            ],
    ])
}
// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_03-Verify Issues that belong to the current Epic
[
        'verify_status_in_progress_none_of_the_issues_which_are_issueBelongsToEpic'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_03_Case_01- $it _when Issues that belong to the current Epic _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues that belong to the current Epic _in selected status:",
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_03_Case_02- $it _when Issues that belong to the current Epic _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues that belong to the current Epic _in selected status:",
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_04-Verify Epic of the current issue
// Invalid use case as child issue has only one parent issue - can't check invalid configuration
[
        'verify_status_in_progress_none_of_the_issues_which_are_epicOfTheCurrentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_04_Case_01- $it _when Epic of the current issue _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Epic of the current issue _in selected status:",
             parameters: [
                     issue     : { ->epic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_04_Case_02- $it _when Epic of the current issue _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Epic of the current issue _in selected status:",
             parameters: [
                     issue     : { ->epic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_05-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByAnyLink'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_04_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_05_Case_02- $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06A-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByBlock'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06A_TC_01_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06A_TC_01_Case_02- $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06B-Verify Issue link to the current issue through is blocked by link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByisBlockedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06B_Case_01- $it _when Issue link to the current issue throgh is blocked by link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06B_Case_02- $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06C-Verify Issue link to the current issue through clones link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByClones'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06C_Case_01- $it _when Issue link to the current issue throgh clones link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through clones link type _in selected status:",
             parameters: [
                     issue     : { ->clones[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06C_Case_02- $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through clones link type _in selected status:",
             parameters: [
                     issue     : { ->clones[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06D-Verify Issue link to the current issue through by is cloned by link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByIsClonedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06D_Case_01- $it _when Issue link to the current issue throgh is cloned by link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06D_Case_02- $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06E-Verify Issue link to the current issue through by duplicates link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByDuplicates'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06E_Case_01- $it _when Issue link to the current issue throgh duplicates link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06E_Case_02- $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06F-Verify Issue link to the current issue through by is duplicated by link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByIsDuplicatedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06F_Case_01- $it _when Issue link to the current issue through is duplicated by link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06F_Case_02- $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06G-Verify Issue link to the current issue through by relates to link type
[
        'verify_status_in_progress_none_of_the_issues_which_are_linkByRelatesTo'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06G_Case_01- $it _when Issue link to the current issue through is relates to link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_06G_Case_02- $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_07-Verify Child issues of the current issue in the Portfolio hierarchy
[
        'verify_status_in_progress_none_of_the_issues_which_are_childPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_07_Case_01- $it _when Child issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected:0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_07_Case_02- $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Child issues of the current issue in the Portfolio hierarchy_in selected status:",
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_08-Verify Parent issues of the current issue in the Portfolio hierarchy
// Invalid use case as child issue has only one parent issue - can't check invalid configuration
[
        'verify_status_in_progress_none_of_the_issues_which_are_parentPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_08_Case_01- $it _when Parent issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Parent issues of the current issue in the Portfolio hierarchy _in selected status:",
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_08_Case_02- $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_09-Verify Issues returned by a Groovy script
[
        'verify_status_in_progress_none_of_the_issues_which_are_returnsByGroovyExpression'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_09_Case_01- $it _when Issues returned by a Groovy script _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a Groovy script _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_09_Case_02- $it _when Issues returned by a Groovy script_in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a Groovy script_in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_10-Verify Issues returned by a JQL search
[
        'verify_status_in_progress_none_of_the_issues_which_are_returnsFromJqlSearch'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_10_Case_01- $it _when Issues returned by a JQL search _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a JQL search _in selected status:",
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_27_TC_10_Case_02- $it _when Issues returned by a JQL search_in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a JQL search_in selected status:",
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_01-Verify Sub_task of the current issue
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_subtask'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_32_TC_01_Case_01- $it _when Sub_task of the current issue not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS to verify_ $it _when Sub_task of the current issue in selected status:",
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_32_TC_01_Case_02- $it _when Sub_task of the current issue not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after verifying_ $it _when Sub_task of the current issue in selected status:",
             parameters: [
                     issue     : { ->subtask[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_02-Verify Sub_task of the current issue
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_parentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_02_Case_01- $it _when parent issue of the current subtask not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when parent issue of the current subtask in selected status:",
             parameters: [
                     issue     : { ->parent[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_02_Case_02- $it _when parent issue of the current subtask in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when parent issue of the current subtask in selected status:",
             parameters: [
                     issue     : { ->parent[] },
                     transition: "To Do",
             ]
            ],
    ])
}
// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_03-Verify Issues that belong to the current Epic
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_issueBelongsToEpic'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_03_Case_01- $it _when Issues that belong to the current Epic _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues that belong to the current Epic _in selected status:",
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_03_Case_02- $it _when Issues that belong to the current Epic _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues that belong to the current Epic _in selected status:",
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_04-Verify Epic of the current issue
// Invalid use case as child issue has only one parent issue - can't check invalid configuration
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_epicOfTheCurrentIssue'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_04_Case_01- $it _when Epic of the current issue _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Epic of the current issue _in selected status:",
             parameters: [
                     issue     : { ->epic[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_04_Case_02- $it _when Epic of the current issue _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueBelongsToEpic[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Epic of the current issue _in selected status:",
             parameters: [
                     issue     : { ->epic[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_05-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByAnyLink'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_04_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_05_Case_02- $it _when Issue link to the current issue throgh any link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue throgh any link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06A-Verify Issue link to the current issue through any link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByBlock'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06A_TC_01_Case_01- $it _when Issue link to the current issue throgh any link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06A_TC_01_Case_02- $it _when Issue link to the current issue through blocks link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through blocks link type _in selected status:",
             parameters: [
                     issue     : { ->blocks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06B-Verify Issue link to the current issue through is blocked by link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByisBlockedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06B_Case_01- $it _when Issue link to the current issue throgh is blocked by link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06B_Case_02- $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->blocks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is blocked by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06C-Verify Issue link to the current issue through clones link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByClones'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06C_Case_01- $it _when Issue link to the current issue throgh clones link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through clones link type _in selected status:",
             parameters: [
                     issue     : { ->clones[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06C_Case_02- $it _when Issue link to the current issue through clones link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through clones link type _in selected status:",
             parameters: [
                     issue     : { ->clones[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06D-Verify Issue link to the current issue through by is cloned by link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByIsClonedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06D_Case_01- $it _when Issue link to the current issue throgh is cloned by link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06D_Case_02- $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->clones[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is cloned by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06E-Verify Issue link to the current issue through by duplicates link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByDuplicates'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06E_Case_01- $it _when Issue link to the current issue throgh duplicates link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06E_Case_02- $it _when Issue link to the current issue through duplicates link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through duplicates link type _in selected status:",
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06F-Verify Issue link to the current issue through by is duplicated by link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByIsDuplicatedBy'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06F_Case_01- $it _when Issue link to the current issue through is duplicated by link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06F_Case_02- $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->duplicates[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through is duplicated by link type _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06G-Verify Issue link to the current issue through by relates to link type
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_linkByRelatesTo'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06G_Case_01- $it _when Issue link to the current issue through is relates to link type _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_06G_Case_02- $it _when Issue link to the current issue through relates to link type _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issue link to the current issue through relates to link type _in selected status:",
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_07-Verify Child issues of the current issue in the Portfolio hierarchy
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_childPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_07_Case_01- $it _when Child issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected:0,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_07_Case_02- $it _when Child issues of the current issue in the Portfolio hierarchy _in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Child issues of the current issue in the Portfolio hierarchy_in selected status:",
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_08-Verify Parent issues of the current issue in the Portfolio hierarchy
// Invalid use case as child issue has only one parent issue - can't check invalid configuration
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_parentPortfolio'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_08_Case_01- $it _when Parent issues of the current issue in the Portfolio hierarchy _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Parent issues of the current issue in the Portfolio hierarchy _in selected status:",
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_08_Case_02- $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->epic_initiative[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Parent issues of the current issue in the Portfolio hierarchy_in selected status:",
             parameters: [
                     issue     : { ->initiative[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_09-Verify Issues returned by a Groovy script
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_returnsByGroovyExpression'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_09_Case_01- $it _when Issues returned by a Groovy script _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a Groovy script _in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_09_Case_02- $it _when Issues returned by a Groovy script_in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->relatesTo[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a Groovy script_in selected status:",
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_10-Verify Issues returned by a JQL search
[
        'verify_status_in_progress_at_least_one_not_in_status_issues_which_is_returnsFromJqlSearch'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_10_Case_01- $it _when Issues returned by a JQL search _not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to IN_PROGRESS before_ $it _when Issues returned by a JQL search _in selected status:",
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "In Progress",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_10_Case_02- $it _when Issues returned by a JQL search_in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->issueLinks[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action    : 'transitionIssue',
             ext: ": transition issue to TO_DO after_ $it _when Issues returned by a JQL search_in selected status:",
             parameters: [
                     issue     : { ->jqlIssue[] },
                     transition: "To Do",
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_22_TC_01-Verify issue type dropdown_ check only if Task issue type
[
        'verify_the_issue_type_dropdwn_Task'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_01_Case_01- $it _when parent issue is of task type of the current subtask not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action: 'updateIssue', ext: ":  change issue type to satisfy the criteria to check: $it",
             parameters: [
                     issue: {->parent[]},
                     issueType: "Story",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_01_Case_02- $it _when parent issue is of task type of the current subtask not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TS_22_TC_02-Verify issue type dropdown_check only if Story issue type
[
        'verify_the_issue_type_dropdwn_Story'
].collect {
    gint.taskHelper.add([
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_02_Case_01- $it _when parent issue is of story type of the current subtask not in selected status:",
             expected: -3,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ],
             data: ["$errorMessage"],
            ],
            [action: 'updateIssue', ext: ":  change issue type to satisfy the criteria to check: $it",
             parameters: [
                     issue: {->parent[]},
                     issueType: "Bug",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_28_TC_02_Case_02- $it _when parent issue is not of story type of the current subtask not in selected status:",
             expected: 0,
             parameters: [
                     issue     : { ->subtask[] },
                     transition: it,
             ]
            ],
    ])
}

// RELATED_ISSUES_STATUS_VALIDATOR_TC_34-Verify the Condition groovy expression
['verify_the_condition_groovy_expression'].each {
    gint.taskHelper.add([
            [action: 'updateIssue',
             ext: ":  change issue priority to low to not satisfy the condition to check: $it",
             parameters: [
                     issue: {->parent[]},
                     priority: "Low",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_34_Case_01- $it _when current issues priority is low:",
             expected: 0,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ],
             failData: ["$errorMessage"],
            ],
            [action: 'updateIssue',
             ext: ":  change issue priority to high to satisfy the condition to check: $it",
             parameters: [
                     issue: {->parent[]},
                     priority: "High",
             ]
            ],
            [action    : 'transitionIssue',
             ext: ": RELATED_ISSUES_STATUS_VALIDATOR_TS_34_Case_02- $it _when current issues priority is high:",
             expected: -3,
             parameters: [
                     issue     : { ->parent[] },
                     transition: it,
             ]
            ],
            [action: 'updateIssue',
             ext: ":  change issue priority to Low after checking: $it",
             parameters: [
                     issue: {->parent[]},
                     priority: "Low",
             ]
            ],
    ])
}

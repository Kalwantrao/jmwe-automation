buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/common/utils.gradle'

tearDown()
addWorkflow()
def errorMessage = "Check the scripted groovy returns true"
def defaultsFields = [
        "scriptDescription=",
        "errorMessage=",
        "field=",
        "correlationId=",
]
def cloudFields = [
        "validator.id=07ce5526-68d4-42ad-8be6-f0a788113a55",
        "validator.config-07ce5526-68d4-42ad-8be6-f0a788113a55={\"expression\":\"!! issue.assignee && !! issue.assignee.accountId\",\"errorMessage\":\"$errorMessage\"}"
]
def functionKey = info?.isCloud ? functionKey.scriptedGroovyValidatorCloud : functionKey.scriptedGroovyValidatorServer

// Configuration for conditions
['issueMustHaveAssignee'].each {
    def fields = info?.isCloud ? cloudFields : defaultsFields + "groovyExpression=!!issue.get('assignee')"
    addTransitionFunction(it, 'validator', fields, functionKey )
}

createWorkflowScheme()
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')

// checking the current status To Do and previous status In Progress
[
        'issueMustHaveAssignee',
].each {
    gint.taskHelper.add([
            [action    : 'transitionIssue', ext: ' : when condition false ' + it,
             expected  : -3,
             parameters: [
                     transition: it,
                     issue: { -> defaultIssue[] },
             ],
            ],
            [action    : 'updateIssue', ext: ' : to check next condition ' + it,
             sleepAfter: 2000,
             parameters: [
                     assignee: user,
                     issue: { -> defaultIssue[] },
             ],
            ],
            [action    : 'transitionIssue', ext: ' : when condition true ' + it,
             sleep: 2000,
             expected  : 0,
             parameters: [
                     transition: it,
                     issue: { -> defaultIssue[] },
             ],
            ],
    ])
}

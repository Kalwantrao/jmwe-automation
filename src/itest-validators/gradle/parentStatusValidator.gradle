buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.gint:gint-atlassian:3.8.4"
	}
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/common/utils.gradle'

tearDown()
addWorkflow()

def defaultFieldsServer = [
		"correlationId=",
]
def functionKey = functionKey.parentStatusValidatorServer

def testUser =  info?.isCloud ? cloudUser : serverUser
// Configuration for validator

statusListServer.eachWithIndex { status, value, i ->
	def fields = defaultFieldsServer +"conditionalValidation=no" + "issue_statuses=$value" + "errorMessage="
	addTransitionFunction( 'parentStatus'+ status, 'validator', fields, functionKey )
}

statusListServer.eachWithIndex { status, value, i ->
	def fields = defaultFieldsServer +"conditionalValidation=yes" + "issue_statuses=$value" + "errorMessage=" + "conditionalValidationScript=$groovyExpression.checkPriorityHigh"
	addTransitionFunction('parentStatusConditionalValidation' + status , 'validator', fields, functionKey )
}

createWorkflowScheme()
createProject()

def defaultIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'defaultIssue')
def subtask = createIssue([type: 'Sub-task', summary: 'JMWE_Issue', parent: {->defaultIssue[]}, priority: 'High'], 'subtask')

['parentStatus','parentStatusConditionalValidation'].each {
	statusListServer.eachWithIndex { status, value, i ->
		gint.taskHelper.add(
				[action    : 'transitionIssue', ext: " : Should throw error when parent status is not in_$status status" + it,
				 expected  : -3,
				 parameters: [
						 transition: it + status,
						 issue     : { -> subtask[] },
				 ],
				],
		)
	}
}
gint.taskHelper.add(
		[action: 'updateIssue', ext: ': change priority to low',
		 parameters: [
				 issue: {->subtask[]},
				 priority: 'Low',
		 ],
		],
)
statusListServer.eachWithIndex { status, value, i ->
	gint.taskHelper.add(
			[action    : 'transitionIssue', ext: " : should not throw error when conditional validation false : $status",
			 expected  : 0,
			 parameters: [
					 transition: 'parentStatusConditionalValidation' + status ,
					 issue: { -> subtask[] },
			 ],
			]
	)
}
gint.taskHelper.add(
		[action: 'updateIssue', ext: ': change priority to High',
		 parameters: [
				 issue: {->subtask[]},
				 priority: 'High',
		 ],
		],
)
['parentStatus','parentStatusConditionalValidation'].each {
	statusListServer.eachWithIndex { status, value, i ->
		gint.taskHelper.add([
				[action    : 'transitionIssue', ext: " : change the parent issue status to $value" + it,
				 parameters: [
						 transition: value,
						 issue     : { -> defaultIssue[] },
				 ],
				],
				[action    : 'transitionIssue', ext: " : Should not throw error when parent issue in selected status_$status" + it,
				 expected  : 0,
				 parameters: [
						 transition: it + status,
						 issue     : { -> subtask[] },
				 ],
				],
		])
	}
}



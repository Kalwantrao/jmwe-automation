//To run  this using gradle open command line in root directory and run below command on windows
//gradlew -b src/itest-postfunctions/gradle/clearFields.gradle -Pcli="acli jira" -Dclean

buildscript {
    def gintVersion = findProperty('gintVersion') ?: System.getenv('GINT_VERSION') ?: '+'
    dependencies {
        classpath 'org.gint:gint-atlassian:' + gintVersion
    }
    repositories {
        flatDir { dirs 'libs' } // for testing SNAPSHOT versions
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

apply plugin: 'org.gint.atlassian'
apply from:'tearDown/tearDown.gradle'
apply from:'configuration/addClearFields.gradle'

def info = gint.getJiraHelper().getServerInfoWithVerify() // Verify access to Jira instance otherwise end test if server not available
def project = gint.getJiraHelper().getProjectKey()	//get project key using jira helper functions
def template = "Scrum software development"
def workflow = project
def workflowScheme = project
def issueTypeScreenScheme = 'SCREEN_SCHEME'
def user = info.user
def saved =	[:]
def savedIssues = [:]

gint.xmlReport = true	//xml report generates in projects root directory
gint.verbose = true

def attachment = 'attachment.png'
def transition = 'clearFields'

gint.taskHelper.addSetUp('createProjectForClearFieldsPostFunction', [
	[action:'run',ext:'createProject',
		parameters:[
			input:[
			 	/-a createWorkflowScheme  --workflowScheme ${workflowScheme} --workflow ${workflow}/,
            	/-a createProject         --project ${project} --template "${template}" --lead @self --workflowScheme ${workflowScheme} --issueTypeScreenScheme ${issueTypeScreenScheme}/,
				/-a addVersion --project ${project} --version 2 /,
			],
		],
	],
]
)

(1..29).each { number ->
def environment = 'QA'
def resolution = 'Done'
def summary
	if(number == 1)
		summary = "affectsVersions"
	else if(number == 2)
		summary = "clearComment"
	else if(number == 3)
		summary = "environment"
	else if(number == 4)
		summary = 'issuetype'
	else if(number == 5)
		summary = 'timeoriginalestimate' //original estimate
	else if(number == 6)
		summary = 'priority'
	else if(number == 7)
		summary = 'timeestimate'
	else if(number == 8)
		summary = 'timespent'
	else if(number == 9)
		summary = 'resolution'
	else if(number == 10)
		summary = 'resolutiondate'
	else if(number == 11)
		summary = 'status'
	else if(number == 12)
		summary = 'fixVersions'
	else if(number == 13)
		summary = 'assignee'
	else if(number == 14)
		summary = 'attachment'
	else if(number == 15)
		summary = 'description'
	else if(number == 16)
		summary = 'labels'
	else if(number == 17)
		summary = 'issuelinks'
	else if(number == 18)
		summary = 'security'
	else if(number == 19)
		summary = 'votes'
	else if(number == 20)
		summary = 'watches'
	else if(number == 21)
		summary = 'reporter'
	else if(number == 22)
		summary = 'parentLink'
	else if(number == 23)
		summary = 'sprint'
	else if(number == 24)
		summary = 'storyPoints'
	else if(number == 25)
		summary = 'TargetEnd'
	else if(number == 26)
		summary = 'TargetStart'
	else if(number == 27)
		summary = 'team'
	else if(number == 28)
		summary = 'archiveddate'
	else if(number == 29)
		summary = "archivedby"
def field
	if(number == 28)
		field = "Archived"
	if(number == 29)
		field = "Archiver"

def value
	if(number == 28)
		value =  "3/24/23"
	if(number == 29)
		value =  user
    gint.taskHelper.add(
        action: 'createIssue', ext: number,
        dependsOn: true,
        group: 'create',
        project: project,
        parameters: [
            type: 'Bug',
            summary: summary,
            reporter: user,
            assignee: user,
            description: 'description' + number,
            labels: 'label',
			comment: 'commentIssue' + number,
			environment : environment,
			estimate: "2d",
			originalEstimate: "4d",
			affectsVersions: 2,
			fixVersions: 2,
			field: "Target start",
			value: "3/27/23",
			field: "Target end",
			value: "3/24/23",
        ],
        stopOnFail: true,
        finalClosure: { Task task ->
            saved.issue1 = gint.searchForIssueKey(task.outData)
            savedIssues[number] = saved.issue1
            gint.helper.logVarWithFormat('saved')
        },
    )
}

(30..34).each { number ->
def summary
	if(number == 30)
		summary = "EpicColor"
	else if(number == 31)
		summary = "EpicLink"
	else if(number == 32)
		summary = "EpicName"
	else if(number == 33)
		summary = "EpicStatus"
	else if(number == 34)
		summary = 'originalStoryPoints'

def field
		if(number == 30)
		field = "Epic Name"
	else if(number == 31)
		field = "Epic Name"
	else if(number == 32)
		field = "Epic Name"
	else if(number == 33)
		field = "Epic Name"
	else if(number == 34)
		field = "Epic Name"

def value
		if(number == 30)
		value = "Epic Name"
	else if(number == 31)
		value = "Epic Name"
	else if(number == 32)
		value = "Epic Name"
	else if(number == 33)
		value = "Epic Name"
	else if(number == 34)
		value = "Epic Name"

    gint.taskHelper.add(
        action: 'createIssue', ext: number,
        dependsOn: true,
        group: 'create',
        project: project,
        parameters: [
            type: 'Epic',
            summary: summary,
            reporter: user,
            assignee: user,
            description: "description" + number,
            labels: "label",
			comment: "commentIssue" + number,
			field: field,
			value: value,
        ],
        stopOnFail: true,
        finalClosure: { Task task ->
            saved.issue2 = gint.searchForIssueKey(task.outData)
            savedIssues[number] = saved.issue2
            gint.helper.logVarWithFormat('saved')
        },
    )
}
gint.taskHelper.add('attachment',[
	[action: 'addAttachment',
	dependsOn: true,
		parameters:[
			issue: ~/${project}-14/,
			file:  attachment,
		],
		data:[
			~/Attachment '${attachment}' with id \d+ added to issue ${project}-\d+./,
		],
	],
])

(1..34).each { number ->
def expected
	 if(number == 4)
		expected = [ -3 ]
	if(number == 6)
		expected = [ -3 ]
	if(number == 11)
		expected = [ -3 ]
	if(number == 26)
		expected = [ -3 ]
	if(number == 27)
		expected = [ -3 ]

def data
	if(number == 4)
		data = 'Remote error: An error occurred while executing a Clear Field(s) Post Function post-function: null Clear Field(s) Post Function: root cause: java.lang.NullPointerException'
	if(number == 6)
		data = 'Remote error: An error occurred while executing a Clear Field(s) Post Function post-function: null Clear Field(s) Post Function: root cause: java.lang.NullPointerException'
	if(number == 11)
		data = 'Remote error: An error occurred while executing a Clear Field(s) Post Function post-function: null Clear Field(s) Post Function: root cause: java.lang.IllegalArgumentException'
	if(number == 26)
		data = 'Remote error: An error occurred while executing a Clear Field(s) Post Function post-function: Issue field "archiveddate" is not supported for setting. Clear Field(s) Post Function: root cause: Issue field "archiveddate" is not supported for setting.'
	if(number == 27)
		data = 'Remote error: An error occurred while executing a Clear Field(s) Post Function post-function: Issue field "archivedby" is not supported for setting. Clear Field(s) Post Function: root cause: Issue field "archivedby" is not supported for setting.'

    gint.taskHelper.add('transitionIssueAll', [
        [action: 'transitionIssue', ext: number,
        expected:expected,
            dependsOn: true,
            parameters: [
                issue: {-> savedIssues[number]  },
                transition: transition + number,
            ],
            data:[data ],
        ],
    ])
}
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.gint:gint-atlassian:3.8.4"
    }
}

apply plugin: 'org.gint.atlassian'
apply from: gint.resourceDirectory +'/src/itest-sharedExtensions/resources/payloadScheduledActions.gradle'

def scheduledActionsUrl = info?.isCloud? "/rest/jmwe-api/scheduled-actions" : "/rest/jmwe/1/scheduled-actions/"

addWorkflow()

createWorkflowScheme()
createProject()

ext.createIssue = { parameters, ext ->
    def savedIssues = [:]
    gint.taskHelper.add([
            [action: 'createIssue',
             sleep: sleep,
             ext: ': '+ ext ,
             project: projectName,
             parameters: parameters,
             finalClosure: { Task task ->
                 def currentIssue = gint.searchForIssueKey(task.outData)
                 savedIssues[] = currentIssue
                 gint.helper.log("Issue created ", savedIssues[]);
             },
            ],
    ]
    )
    return savedIssues
}


def scheduledActionsRunAsAddonUser = createSharedExtension(info?.isCloud? "POST": "PUT", scheduledActionsUrl, runAsAddonUserPayload, "scheduled action run as addon user")

def scheduledActionsRunAsAddonUserId = {->scheduledActionsRunAsAddonUser[0] }

def scheduledActionsRunAsAddonUserIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'scheduledActionsRunAsAddonUserIssue')

performActionsOnSharedExtension("run scheduled actions_run as addon user", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsAddonUserId}/actions" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsAddonUserId}/actions", /{ "action": "run" }/)

gint.taskHelper.add(
        [action: "getComments",
         sleep: sleep,
         ext: ":To check the scheduled action_run as addon user",
         parameters:[
                 issue: {-> scheduledActionsRunAsAddonUserIssue[]},
         ],
         data: [ /$addonName added a comment/,
                 /scheduled_action run as addon user/
         ]
        ]
)

deleteSharedExtension("DELETE", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsAddonUserId}" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsAddonUserId}", "delete scheduled actions run as addon user")

def scheduledActionsRunAsSelectedUser = createSharedExtension(info?.isCloud? "POST": "PUT", scheduledActionsUrl, runAsSelectedUserPayload, "scheduled action run as selected user")

def scheduledActionsRunAsSelectedUserId = {->scheduledActionsRunAsSelectedUser[0] }

def scheduledActionsRunAsSelectedUserIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'scheduledActionsRunAsSelectedUserIssue')

performActionsOnSharedExtension("run scheduled actions_run as selected user", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsSelectedUserId}/actions" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsSelectedUserId}/actions", /{ "action": "run" }/)

gint.taskHelper.add(
        [action: "getComments",
         sleep: sleep,
         ext: ":To check the scheduled action_run as selected user",
         parameters:[
                 issue: {-> scheduledActionsRunAsSelectedUserIssue[]},
         ],
         data: [ /$getCurrentUserName added a comment/,
                 /scheduled_action run as selected user/
         ]
        ]
)

deleteSharedExtension("DELETE", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsSelectedUserId}" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsSelectedUserId}", "delete scheduled actions run as selected user")

def scheduledActionsRunAsUserInFieldAssignee = createSharedExtension(info?.isCloud? "POST": "PUT", scheduledActionsUrl, runAsUserInFieldAssigneePayload, "scheduled action run as user in field assignee")

def scheduledActionsRunAsUserInFieldAssigneeId = {->scheduledActionsRunAsUserInFieldAssignee[0] }

def scheduledActionsRunAsUserInFieldAssigneeIssue = createIssue([type: 'Task', summary: 'JMWE_Issue', assignee: testUser], 'scheduledActionsRunAsUserInFieldAssigneeIsssue')

performActionsOnSharedExtension("run scheduled actions_run as user in field assignee", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserInFieldAssigneeId}/actions" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserInFieldAssigneeId}/actions", /{ "action": "run" }/)

gint.taskHelper.add(
        [action: "getComments",
         sleep: sleep,
         ext: ":To check the scheduled action_run as user in field assignee",
         parameters:[
                 issue: {-> scheduledActionsRunAsUserInFieldAssigneeIssue[]},
         ],
         data: [ /$testUser added a comment/,
                 /scheduled_action run as user in field assignee/
         ]
        ]
)

deleteSharedExtension("DELETE", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserInFieldAssigneeId}" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserInFieldAssigneeId}", "delete scheduled actions run as user in field assignee")

def scheduledActionsRunAsUserInFieldReporter = createSharedExtension(info?.isCloud? "POST": "PUT", scheduledActionsUrl, runAsUserInFieldReporterPayload, "scheduled action run as user in field reporter")

def scheduledActionsRunAsUserInFieldReporterId = {->scheduledActionsRunAsUserInFieldReporter[0] }

def scheduledActionsRunAsUserInFieldReporterIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'scheduledActionsRunAsUserInFieldReporterIssue')

performActionsOnSharedExtension("run scheduled actions_run as user in field reporter", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserInFieldReporterId}/actions" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserInFieldReporterId}/actions", /{ "action": "run" }/)

gint.taskHelper.add(
        [action: "getComments",
         sleep: sleep,
         ext: ":To check the scheduled action_run as user in field reporter",
         parameters:[
                 issue: {-> scheduledActionsRunAsUserInFieldReporterIssue[]},
         ],
         data: [ /$getCurrentUserName added a comment/,
                 /scheduled_action run as user in field reporter/
         ]
        ]
)

deleteSharedExtension("DELETE", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserInFieldReporterId}" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserInFieldReporterId}", "delete scheduled actions run as user in field reporter")

def scheduledActionsRunAsUserInFieldCreator = createSharedExtension(info?.isCloud? "POST": "PUT", scheduledActionsUrl, runAsUserinFieldCreatorPayload, "scheduled action run as user in field creator")

def scheduledActionsRunAsUserInFieldCreatorId = {->scheduledActionsRunAsUserInFieldCreator[0] }

def scheduledActionsRunAsUserInFieldCreatorIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'scheduledActionsRunAsUserInFieldCreatorIssue')

performActionsOnSharedExtension("run scheduled actions_run as user in field creator", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserInFieldCreatorId}/actions" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserInFieldCreatorId}/actions", /{ "action": "run" }/)

gint.taskHelper.add(
        [action: "getComments",
         sleep: sleep,
         ext: ":To check the scheduled action_run as user in field creator",
         parameters:[
                 issue: {-> scheduledActionsRunAsUserInFieldCreatorIssue[]},
         ],
         data: [ /$getCurrentUserName added a comment/,
                 /scheduled_action run as user in field creator/
         ]
        ]
)

deleteSharedExtension("DELETE", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserInFieldCreatorId}" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserInFieldCreatorId}", "delete scheduled actions run as user in field creator")

def scheduledActionsRunAsUserReturnFromScript = createSharedExtension(info?.isCloud? "POST": "PUT", scheduledActionsUrl, runAsUserReturnFromScriptPayload, "scheduled action run as user return from script")

def scheduledActionsRunAsUserReturnFromScriptId = {->scheduledActionsRunAsUserReturnFromScript[0] }

def scheduledActionsRunAsUserReturnFromScriptIssue = createIssue([type: 'Task', summary: 'JMWE_Issue'], 'scheduledActionsRunAsUserReturnFromScript')

performActionsOnSharedExtension("run scheduled actions_run as user return from script", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserReturnFromScriptId}/actions" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserReturnFromScriptId}/actions", /{ "action": "run" }/)

gint.taskHelper.add(
        [action: "getComments",
         sleep: sleep,
         ext: ":To check the scheduled action_run as user return from script",
         parameters:[
                 issue: {-> scheduledActionsRunAsUserReturnFromScriptIssue[]},
         ],
         data: [ /$getCurrentUserName added a comment/,
                 /scheduled_action run as user return from script/
         ]
        ]
)

deleteSharedExtension("DELETE", info?.isCloud? "/rest/jmwe-api/scheduled-actions/${scheduledActionsRunAsUserReturnFromScriptId}" : "/rest/jmwe/1/scheduled-actions/${scheduledActionsRunAsUserReturnFromScriptId}", "delete scheduled actions run as user return from script")






